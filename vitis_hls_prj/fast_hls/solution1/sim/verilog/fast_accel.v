// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="fast_accel_fast_accel,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=6845,HLS_SYN_LUT=6452,HLS_VERSION=2020_2}" *)

module fast_accel (
        ap_clk,
        ap_rst_n,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        s_axi_CTRL_AWVALID,
        s_axi_CTRL_AWREADY,
        s_axi_CTRL_AWADDR,
        s_axi_CTRL_WVALID,
        s_axi_CTRL_WREADY,
        s_axi_CTRL_WDATA,
        s_axi_CTRL_WSTRB,
        s_axi_CTRL_ARVALID,
        s_axi_CTRL_ARREADY,
        s_axi_CTRL_ARADDR,
        s_axi_CTRL_RVALID,
        s_axi_CTRL_RREADY,
        s_axi_CTRL_RDATA,
        s_axi_CTRL_RRESP,
        s_axi_CTRL_BVALID,
        s_axi_CTRL_BREADY,
        s_axi_CTRL_BRESP,
        interrupt,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP
);

parameter    ap_ST_fsm_state1 = 24'd1;
parameter    ap_ST_fsm_state2 = 24'd2;
parameter    ap_ST_fsm_state3 = 24'd4;
parameter    ap_ST_fsm_pp0_stage0 = 24'd8;
parameter    ap_ST_fsm_pp0_stage1 = 24'd16;
parameter    ap_ST_fsm_pp0_stage2 = 24'd32;
parameter    ap_ST_fsm_pp0_stage3 = 24'd64;
parameter    ap_ST_fsm_pp0_stage4 = 24'd128;
parameter    ap_ST_fsm_pp0_stage5 = 24'd256;
parameter    ap_ST_fsm_pp0_stage6 = 24'd512;
parameter    ap_ST_fsm_pp0_stage7 = 24'd1024;
parameter    ap_ST_fsm_pp0_stage8 = 24'd2048;
parameter    ap_ST_fsm_pp0_stage9 = 24'd4096;
parameter    ap_ST_fsm_pp0_stage10 = 24'd8192;
parameter    ap_ST_fsm_pp0_stage11 = 24'd16384;
parameter    ap_ST_fsm_pp0_stage12 = 24'd32768;
parameter    ap_ST_fsm_pp0_stage13 = 24'd65536;
parameter    ap_ST_fsm_pp0_stage14 = 24'd131072;
parameter    ap_ST_fsm_pp0_stage15 = 24'd262144;
parameter    ap_ST_fsm_pp0_stage16 = 24'd524288;
parameter    ap_ST_fsm_pp0_stage17 = 24'd1048576;
parameter    ap_ST_fsm_pp0_stage18 = 24'd2097152;
parameter    ap_ST_fsm_pp0_stage19 = 24'd4194304;
parameter    ap_ST_fsm_state55 = 24'd8388608;
parameter    C_S_AXI_CTRL_DATA_WIDTH = 32;
parameter    C_S_AXI_CTRL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CTRL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;
input   s_axi_CTRL_AWVALID;
output   s_axi_CTRL_AWREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_CTRL_AWADDR;
input   s_axi_CTRL_WVALID;
output   s_axi_CTRL_WREADY;
input  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_CTRL_WDATA;
input  [C_S_AXI_CTRL_WSTRB_WIDTH - 1:0] s_axi_CTRL_WSTRB;
input   s_axi_CTRL_ARVALID;
output   s_axi_CTRL_ARREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_CTRL_ARADDR;
output   s_axi_CTRL_RVALID;
input   s_axi_CTRL_RREADY;
output  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_CTRL_RDATA;
output  [1:0] s_axi_CTRL_RRESP;
output   s_axi_CTRL_BVALID;
input   s_axi_CTRL_BREADY;
output  [1:0] s_axi_CTRL_BRESP;
output   interrupt;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [23:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [63:0] img_in;
wire   [31:0] threshold;
wire   [63:0] img_out;
wire   [31:0] rows;
wire   [31:0] cols;
reg    gmem_blk_n_AW;
wire    ap_CS_fsm_pp0_stage18;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage18;
reg   [0:0] icmp_ln14_reg_1774;
reg   [0:0] icmp_ln21_reg_2113;
reg    gmem_blk_n_W;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_pp0_stage19;
reg    gmem_blk_n_B;
wire    ap_CS_fsm_pp0_stage4;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage4;
reg    gmem_blk_n_AR;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_pp0_stage0;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_pp0_stage16;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_pp0_stage17;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11;
reg   [0:0] icmp_ln21_reg_2113_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13;
reg    ap_enable_reg_pp0_iter2;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14;
reg   [0:0] icmp_ln28_reg_2324;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_pp0_stage15;
reg    gmem_AWVALID;
wire    gmem_AWREADY;
reg    gmem_WVALID;
wire    gmem_WREADY;
reg   [7:0] gmem_WDATA;
reg    gmem_ARVALID;
wire    gmem_ARREADY;
reg   [63:0] gmem_ARADDR;
wire    gmem_RVALID;
reg    gmem_RREADY;
wire   [7:0] gmem_RDATA;
wire    gmem_RLAST;
wire   [0:0] gmem_RID;
wire   [0:0] gmem_RUSER;
wire   [1:0] gmem_RRESP;
wire    gmem_BVALID;
reg    gmem_BREADY;
wire   [1:0] gmem_BRESP;
wire   [0:0] gmem_BID;
wire   [0:0] gmem_BUSER;
reg   [63:0] indvar_flatten_reg_417;
reg   [31:0] indvar_reg_429;
reg   [31:0] y_reg_440;
reg   [31:0] x_reg_452;
reg   [31:0] indvar595_reg_463;
reg   [63:0] reg_484;
wire    ap_block_state21_pp0_stage17_iter0;
reg    ap_block_state41_pp0_stage17_iter1;
reg    ap_block_pp0_stage17_11001;
wire   [0:0] icmp_ln21_fu_1129_p2;
reg  signed [31:0] cols_read_reg_1627;
reg   [63:0] img_out_read_reg_1636;
reg   [31:0] threshold_read_reg_1641;
reg   [63:0] img_in_read_reg_1661;
wire   [31:0] add_ln14_fu_493_p2;
reg   [31:0] add_ln14_reg_1673;
wire   [31:0] select_ln14_fu_527_p3;
reg   [31:0] select_ln14_reg_1678;
wire   [31:0] select_ln14_1_fu_557_p3;
reg   [31:0] select_ln14_1_reg_1683;
wire    ap_CS_fsm_state2;
wire  signed [63:0] sext_ln14_fu_577_p1;
reg  signed [63:0] sext_ln14_reg_1698;
wire    ap_CS_fsm_state3;
wire   [63:0] add_ln14_2_fu_636_p2;
reg   [63:0] add_ln14_2_reg_1712;
wire   [63:0] add_ln52_fu_641_p2;
reg   [63:0] add_ln52_reg_1719;
wire   [63:0] add_ln53_fu_646_p2;
reg   [63:0] add_ln53_reg_1725;
wire   [63:0] add_ln58_fu_651_p2;
reg   [63:0] add_ln58_reg_1731;
wire   [63:0] add_ln59_fu_656_p2;
reg   [63:0] add_ln59_reg_1737;
wire   [63:0] add_ln60_fu_661_p2;
reg   [63:0] add_ln60_reg_1743;
wire   [63:0] add_ln39_2_fu_666_p2;
reg   [63:0] add_ln39_2_reg_1749;
wire   [63:0] add_ln41_1_fu_672_p2;
reg   [63:0] add_ln41_1_reg_1754;
wire   [63:0] add_ln42_2_fu_677_p2;
reg   [63:0] add_ln42_2_reg_1759;
wire   [63:0] grp_fu_571_p2;
reg   [63:0] bound_reg_1764;
wire    ap_block_state4_pp0_stage0_iter0;
wire    ap_block_state24_pp0_stage0_iter1;
reg    ap_block_state24_io;
reg    ap_block_state44_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln14_fu_692_p2;
reg   [0:0] icmp_ln14_reg_1774_pp0_iter1_reg;
wire   [0:0] icmp_ln16_fu_697_p2;
reg   [0:0] icmp_ln16_reg_1778;
wire   [31:0] select_ln14_3_fu_702_p3;
reg   [31:0] select_ln14_3_reg_1789;
wire   [31:0] select_ln14_4_fu_716_p3;
reg   [31:0] select_ln14_4_reg_1795;
wire   [31:0] add_ln14_6_fu_732_p2;
reg   [31:0] add_ln14_6_reg_1801;
wire   [63:0] grp_fu_687_p2;
reg   [63:0] empty_reg_1806;
wire    ap_block_state5_pp0_stage1_iter0;
wire    ap_block_state25_pp0_stage1_iter1;
reg    ap_block_state25_io;
reg    ap_block_state45_pp0_stage1_iter2;
reg    ap_block_pp0_stage1_11001;
wire   [31:0] select_ln14_2_fu_746_p3;
reg   [31:0] select_ln14_2_reg_1817;
wire    ap_block_state6_pp0_stage2_iter0;
wire    ap_block_state26_pp0_stage2_iter1;
reg    ap_block_state26_io;
wire    ap_block_state46_pp0_stage2_iter2;
reg    ap_block_pp0_stage2_11001;
wire   [63:0] grp_fu_741_p2;
reg   [63:0] mul_ln14_reg_1823;
wire   [31:0] add_ln14_7_fu_768_p2;
reg   [31:0] add_ln14_7_reg_1835;
wire   [32:0] add_ln41_2_fu_778_p2;
reg   [32:0] add_ln41_2_reg_1840;
wire   [31:0] empty_18_fu_784_p2;
reg   [31:0] empty_18_reg_1845;
wire    ap_block_state7_pp0_stage3_iter0;
wire    ap_block_state27_pp0_stage3_iter1;
reg    ap_block_state27_io;
wire    ap_block_state47_pp0_stage3_iter2;
reg    ap_block_pp0_stage3_11001;
wire   [63:0] grp_fu_756_p2;
reg   [63:0] mul_ln14_1_reg_1850;
wire   [63:0] zext_ln16_1_fu_798_p1;
reg   [63:0] zext_ln16_1_reg_1860;
reg   [63:0] gmem_addr_reg_1865;
reg   [63:0] gmem_addr_1_reg_1871;
reg   [63:0] gmem_addr_2_reg_1877;
reg   [63:0] gmem_addr_3_reg_1883;
wire    ap_block_state8_pp0_stage4_iter0;
reg    ap_block_state8_io;
reg    ap_block_state28_pp0_stage4_iter1;
wire    ap_block_state48_pp0_stage4_iter2;
reg    ap_predicate_op491_write_state48;
reg    ap_block_state48_io;
reg    ap_block_pp0_stage4_11001;
wire   [63:0] grp_fu_793_p2;
reg   [63:0] mul_ln14_2_reg_1894;
wire   [31:0] add_ln14_9_fu_878_p2;
reg   [31:0] add_ln14_9_reg_1899;
reg   [63:0] gmem_addr_4_reg_1904;
wire   [63:0] grp_fu_866_p2;
reg   [63:0] empty_19_reg_1910;
wire    ap_block_state9_pp0_stage5_iter0;
reg    ap_block_state9_io;
reg    ap_block_state29_pp0_stage5_iter1;
wire    ap_block_state49_pp0_stage5_iter2;
reg    ap_predicate_op493_write_state49;
reg    ap_block_state49_io;
reg    ap_block_pp0_stage5_11001;
wire   [31:0] indvars_iv_next578_fu_899_p2;
reg   [31:0] indvars_iv_next578_reg_1915;
wire   [31:0] indvars_iv_next578_mid1_fu_913_p2;
reg   [31:0] indvars_iv_next578_mid1_reg_1926;
wire    ap_block_state10_pp0_stage6_iter0;
reg    ap_block_state10_io;
reg    ap_block_state30_pp0_stage6_iter1;
wire    ap_block_state50_pp0_stage6_iter2;
reg    ap_block_pp0_stage6_11001;
wire   [31:0] select_ln14_8_fu_927_p3;
reg   [31:0] select_ln14_8_reg_1936;
wire   [63:0] grp_fu_908_p2;
reg   [63:0] mul_ln14_4_reg_1942;
wire   [63:0] select_ln14_10_fu_933_p3;
reg   [63:0] select_ln14_10_reg_1947;
wire   [63:0] add_ln14_5_fu_938_p2;
reg   [63:0] add_ln14_5_reg_1952;
wire    ap_block_state11_pp0_stage7_iter0;
reg    ap_block_state11_io;
reg    ap_block_state31_pp0_stage7_iter1;
wire    ap_block_state51_pp0_stage7_iter2;
reg    ap_block_pp0_stage7_11001;
wire   [63:0] grp_fu_922_p2;
reg   [63:0] empty_20_reg_1957;
wire   [32:0] zext_ln14_4_fu_944_p1;
reg   [32:0] zext_ln14_4_reg_1963;
wire   [32:0] add_ln14_10_fu_955_p2;
reg   [32:0] add_ln14_10_reg_1973;
wire   [32:0] add_ln14_8_fu_961_p2;
reg   [32:0] add_ln14_8_reg_1978;
wire    ap_block_state12_pp0_stage8_iter0;
reg    ap_block_state12_io;
reg    ap_block_state32_pp0_stage8_iter1;
wire    ap_block_state52_pp0_stage8_iter2;
reg    ap_block_pp0_stage8_11001;
wire   [63:0] grp_fu_950_p2;
reg   [63:0] p_mid195_reg_1983;
wire    ap_block_state13_pp0_stage9_iter0;
reg    ap_block_state33_pp0_stage9_iter1;
reg    ap_block_state33_io;
reg    ap_predicate_op500_writeresp_state53;
reg    ap_block_state53_pp0_stage9_iter2;
reg    ap_block_pp0_stage9_11001;
wire   [63:0] select_ln14_11_fu_987_p3;
reg   [63:0] select_ln14_11_reg_1998;
wire   [63:0] grp_fu_969_p2;
reg   [63:0] mul_ln14_5_reg_2003;
wire   [63:0] zext_ln16_fu_992_p1;
reg   [63:0] zext_ln16_reg_2008;
wire   [63:0] add_ln39_fu_995_p2;
reg   [63:0] add_ln39_reg_2018;
wire   [31:0] add_ln16_fu_1001_p2;
reg   [31:0] add_ln16_reg_2023;
wire   [31:0] add_ln16_1_fu_1006_p2;
reg   [31:0] add_ln16_1_reg_2028;
wire   [63:0] grp_fu_982_p2;
reg   [63:0] mul_ln14_3_reg_2033;
wire    ap_block_state14_pp0_stage10_iter0;
reg    ap_block_state34_pp0_stage10_iter1;
reg    ap_block_state34_io;
reg    ap_predicate_op503_writeresp_state54;
reg    ap_block_state54_pp0_stage10_iter2;
reg    ap_block_pp0_stage10_11001;
reg   [7:0] center_V_reg_2038;
reg    ap_block_state15_pp0_stage11_iter0;
wire    ap_block_state35_pp0_stage11_iter1;
reg    ap_block_state35_io;
reg    ap_block_pp0_stage11_11001;
wire   [63:0] add_ln42_fu_1011_p2;
reg   [63:0] add_ln42_reg_2043;
reg   [7:0] point_V_16_reg_2049;
reg    ap_block_state16_pp0_stage12_iter0;
wire    ap_block_state36_pp0_stage12_iter1;
reg    ap_block_state36_io;
reg    ap_block_pp0_stage12_11001;
wire   [8:0] zext_ln1347_fu_1018_p1;
reg   [8:0] zext_ln1347_reg_2054;
reg    ap_block_state17_pp0_stage13_iter0;
wire    ap_block_state37_pp0_stage13_iter1;
reg    ap_block_state37_io;
reg    ap_block_pp0_stage13_11001;
reg   [8:0] zext_ln1347_reg_2054_pp0_iter1_reg;
wire   [0:0] count_pre_fu_1031_p2;
reg   [0:0] count_pre_reg_2073;
reg   [7:0] point_V_reg_2078;
wire   [0:0] icmp_ln886_fu_1048_p2;
reg   [0:0] icmp_ln886_reg_2083;
reg    ap_block_state18_pp0_stage14_iter0;
wire    ap_block_state38_pp0_stage14_iter1;
reg    ap_block_state38_io;
reg    ap_block_pp0_stage14_11001;
reg   [7:0] point_V_2_reg_2088;
wire   [0:0] icmp_ln886_1_fu_1065_p2;
reg   [0:0] icmp_ln886_1_reg_2093;
reg    ap_block_state19_pp0_stage15_iter0;
wire    ap_block_state39_pp0_stage15_iter1;
reg    ap_block_pp0_stage15_11001;
reg   [7:0] point_V_3_reg_2098;
wire   [0:0] icmp_ln886_2_fu_1082_p2;
reg   [0:0] icmp_ln886_2_reg_2103;
wire    ap_block_state20_pp0_stage16_iter0;
reg    ap_block_state40_pp0_stage16_iter1;
reg    ap_block_pp0_stage16_11001;
wire   [2:0] count_pre_2_fu_1123_p2;
reg   [2:0] count_pre_2_reg_2108;
reg   [63:0] gmem_addr_6_reg_2117;
reg   [63:0] gmem_addr_7_reg_2123;
reg   [63:0] gmem_addr_8_reg_2129;
reg   [63:0] gmem_addr_9_reg_2135;
reg   [63:0] gmem_addr_10_reg_2141;
reg   [63:0] gmem_addr_11_reg_2147;
reg   [63:0] gmem_addr_12_reg_2153;
reg   [63:0] gmem_addr_13_reg_2159;
reg   [63:0] gmem_addr_14_reg_2165;
reg   [63:0] gmem_addr_15_reg_2171;
reg   [63:0] gmem_addr_16_reg_2177;
reg   [63:0] gmem_addr_17_reg_2183;
reg   [7:0] point_V_4_reg_2189;
wire   [0:0] count_for_fu_1293_p2;
reg   [0:0] count_for_reg_2194;
reg   [7:0] point_V_5_reg_2199;
wire   [0:0] icmp_ln886_4_fu_1310_p2;
reg   [0:0] icmp_ln886_4_reg_2204;
reg   [7:0] point_V_6_reg_2209;
wire   [0:0] icmp_ln886_5_fu_1333_p2;
reg   [0:0] icmp_ln886_5_reg_2214;
reg   [7:0] point_V_7_reg_2219;
wire   [2:0] add_ln27_1_fu_1348_p2;
reg   [2:0] add_ln27_1_reg_2224;
wire   [0:0] icmp_ln886_6_fu_1365_p2;
reg   [0:0] icmp_ln886_6_reg_2229;
reg   [7:0] point_V_8_reg_2234;
reg   [7:0] point_V_9_reg_2239;
wire   [1:0] add_ln27_3_fu_1403_p2;
reg   [1:0] add_ln27_3_reg_2244;
wire   [0:0] icmp_ln886_8_fu_1421_p2;
reg   [0:0] icmp_ln886_8_reg_2249;
wire   [3:0] add_ln27_4_fu_1432_p2;
reg   [3:0] add_ln27_4_reg_2254;
reg   [7:0] point_V_10_reg_2259;
wire   [0:0] icmp_ln886_9_fu_1450_p2;
reg   [0:0] icmp_ln886_9_reg_2264;
reg   [7:0] point_V_11_reg_2269;
reg   [7:0] point_V_12_reg_2274;
wire    ap_block_state22_pp0_stage18_iter0;
reg    ap_predicate_op304_readreq_state22;
reg    ap_predicate_op305_writereq_state22;
reg    ap_predicate_op306_writereq_state22;
reg    ap_block_state22_io;
reg    ap_block_state42_pp0_stage18_iter1;
reg    ap_block_pp0_stage18_11001;
wire   [1:0] add_ln27_6_fu_1488_p2;
reg   [1:0] add_ln27_6_reg_2279;
wire   [0:0] icmp_ln886_11_fu_1506_p2;
reg   [0:0] icmp_ln886_11_reg_2284;
wire    ap_block_state23_pp0_stage19_iter0;
reg    ap_predicate_op308_readreq_state23;
reg    ap_predicate_op309_write_state23;
reg    ap_block_state23_io;
reg    ap_block_state43_pp0_stage19_iter1;
reg    ap_block_pp0_stage19_11001;
reg   [7:0] point_V_13_reg_2289;
wire   [0:0] icmp_ln886_12_fu_1523_p2;
reg   [0:0] icmp_ln886_12_reg_2294;
reg   [7:0] point_V_14_reg_2299;
wire   [0:0] icmp_ln886_13_fu_1540_p2;
reg   [0:0] icmp_ln886_13_reg_2304;
reg   [7:0] point_V_15_reg_2309;
wire   [1:0] add_ln27_7_fu_1575_p2;
reg   [1:0] add_ln27_7_reg_2314;
wire   [1:0] add_ln27_8_fu_1581_p2;
reg   [1:0] add_ln27_8_reg_2319;
wire   [0:0] icmp_ln28_fu_1621_p2;
reg    ap_block_pp0_stage7_subdone;
reg    ap_condition_pp0_exit_iter0_state11;
reg    ap_block_pp0_stage19_subdone;
reg    ap_block_pp0_stage10_subdone;
reg   [63:0] ap_phi_mux_indvar_flatten_phi_fu_421_p4;
reg   [31:0] ap_phi_mux_indvar_phi_fu_433_p4;
reg   [31:0] ap_phi_mux_y_phi_fu_444_p4;
reg   [31:0] ap_phi_mux_x_phi_fu_456_p4;
reg   [31:0] ap_phi_mux_indvar595_phi_fu_467_p4;
wire   [63:0] grp_fu_474_p2;
wire   [63:0] add_ln39_1_fu_806_p2;
wire   [63:0] add_ln40_1_fu_822_p2;
wire   [63:0] add_ln41_fu_841_p2;
wire   [63:0] add_ln42_1_fu_852_p2;
wire   [63:0] add_ln43_fu_888_p2;
wire   [63:0] add_ln52_1_fu_1135_p2;
wire   [63:0] add_ln53_2_fu_1150_p2;
wire   [63:0] add_ln54_1_fu_1165_p2;
wire   [63:0] add_ln55_1_fu_1180_p2;
wire   [63:0] add_ln56_1_fu_1195_p2;
wire   [63:0] add_ln57_fu_1206_p2;
wire   [63:0] add_ln58_1_fu_1216_p2;
wire   [63:0] add_ln59_1_fu_1226_p2;
wire   [63:0] add_ln60_1_fu_1237_p2;
wire   [63:0] add_ln61_fu_1248_p2;
wire   [63:0] add_ln62_fu_1259_p2;
wire   [63:0] add_ln63_fu_1270_p2;
reg    ap_block_pp0_stage19_01001;
reg    ap_block_pp0_stage4_01001;
reg    ap_block_pp0_stage5_01001;
wire  signed [31:0] add_ln14_fu_493_p0;
wire   [31:0] add_ln14_1_fu_499_p2;
wire   [29:0] tmp_fu_505_p4;
wire   [0:0] icmp_fu_515_p2;
wire   [31:0] add_ln14_3_fu_521_p2;
wire   [29:0] tmp_1_fu_535_p4;
wire  signed [31:0] add_ln14_4_fu_551_p0;
wire   [0:0] icmp126_fu_545_p2;
wire   [31:0] add_ln14_4_fu_551_p2;
wire   [31:0] grp_fu_571_p0;
wire   [31:0] grp_fu_571_p1;
wire   [33:0] shl_ln_fu_583_p3;
wire  signed [34:0] sext_ln14_2_fu_590_p1;
wire  signed [34:0] sext_ln14_1_fu_580_p1;
wire   [34:0] sub_ln14_fu_594_p2;
wire   [34:0] shl_ln14_1_fu_604_p3;
wire   [32:0] shl_ln14_2_fu_615_p3;
wire  signed [35:0] sext_ln14_4_fu_611_p1;
wire  signed [35:0] sext_ln14_5_fu_622_p1;
wire   [35:0] sub_ln14_1_fu_626_p2;
wire  signed [63:0] sext_ln14_3_fu_600_p1;
wire  signed [63:0] sext_ln14_6_fu_632_p1;
wire   [31:0] grp_fu_687_p0;
wire  signed [31:0] grp_fu_687_p1;
wire   [31:0] add_ln14_11_fu_710_p2;
wire   [31:0] select_ln14_5_fu_724_p3;
wire   [31:0] grp_fu_741_p0;
wire  signed [31:0] grp_fu_741_p1;
wire   [31:0] grp_fu_756_p0;
wire  signed [31:0] grp_fu_756_p1;
wire   [31:0] select_ln14_7_fu_761_p3;
wire   [32:0] zext_ln16_2_fu_774_p1;
wire   [31:0] grp_fu_793_p0;
wire  signed [31:0] grp_fu_793_p1;
wire   [63:0] add_ln39_3_fu_801_p2;
wire   [63:0] add_ln40_2_fu_817_p2;
wire   [63:0] zext_ln41_fu_833_p1;
wire   [63:0] add_ln41_3_fu_836_p2;
wire   [31:0] grp_fu_866_p0;
wire  signed [31:0] grp_fu_866_p1;
wire   [31:0] select_ln14_9_fu_871_p3;
wire   [63:0] add_ln43_1_fu_884_p2;
wire   [31:0] grp_fu_908_p0;
wire  signed [31:0] grp_fu_908_p1;
wire   [31:0] grp_fu_922_p0;
wire  signed [31:0] grp_fu_922_p1;
wire   [31:0] grp_fu_950_p0;
wire  signed [31:0] grp_fu_950_p1;
wire   [32:0] grp_fu_969_p0;
wire  signed [31:0] grp_fu_969_p1;
wire   [32:0] grp_fu_982_p0;
wire  signed [31:0] grp_fu_982_p1;
wire   [63:0] select_ln14_6_fu_974_p3;
wire   [8:0] zext_ln215_fu_1015_p1;
wire   [8:0] ret_fu_1021_p2;
wire  signed [31:0] sext_ln886_fu_1027_p1;
wire   [8:0] zext_ln1347_1_fu_1036_p1;
wire   [8:0] ret_1_fu_1039_p2;
wire  signed [31:0] sext_ln886_1_fu_1044_p1;
wire   [8:0] zext_ln1347_2_fu_1053_p1;
wire   [8:0] ret_2_fu_1056_p2;
wire  signed [31:0] sext_ln886_2_fu_1061_p1;
wire   [8:0] zext_ln1347_3_fu_1070_p1;
wire   [8:0] ret_3_fu_1073_p2;
wire  signed [31:0] sext_ln886_3_fu_1078_p1;
wire   [1:0] zext_ln40_fu_1091_p1;
wire   [1:0] zext_ln43_fu_1097_p1;
wire   [1:0] add_ln43_2_fu_1103_p2;
wire   [1:0] zext_ln42_fu_1094_p1;
wire   [1:0] zext_ln43_1_fu_1100_p1;
wire   [1:0] add_ln43_3_fu_1113_p2;
wire   [2:0] zext_ln43_3_fu_1119_p1;
wire   [2:0] zext_ln43_2_fu_1109_p1;
wire   [63:0] add_ln40_fu_1087_p2;
wire   [63:0] add_ln53_1_fu_1146_p2;
wire   [63:0] add_ln54_fu_1161_p2;
wire   [63:0] add_ln55_fu_1176_p2;
wire   [63:0] add_ln56_fu_1191_p2;
wire   [8:0] zext_ln1347_4_fu_1281_p1;
wire   [8:0] ret_4_fu_1284_p2;
wire  signed [31:0] sext_ln886_4_fu_1289_p1;
wire   [8:0] zext_ln1347_5_fu_1298_p1;
wire   [8:0] ret_5_fu_1301_p2;
wire  signed [31:0] sext_ln886_5_fu_1306_p1;
wire   [8:0] zext_ln1347_6_fu_1321_p1;
wire   [8:0] ret_6_fu_1324_p2;
wire  signed [31:0] sext_ln886_6_fu_1329_p1;
wire   [1:0] zext_ln52_fu_1315_p1;
wire   [1:0] zext_ln54_fu_1318_p1;
wire   [1:0] add_ln27_fu_1338_p2;
wire   [2:0] zext_ln27_1_fu_1344_p1;
wire   [8:0] zext_ln1347_7_fu_1353_p1;
wire   [8:0] ret_7_fu_1356_p2;
wire  signed [31:0] sext_ln886_7_fu_1361_p1;
wire   [8:0] zext_ln1347_8_fu_1376_p1;
wire   [8:0] ret_8_fu_1379_p2;
wire  signed [31:0] sext_ln886_8_fu_1384_p1;
wire   [0:0] icmp_ln886_7_fu_1388_p2;
wire   [1:0] zext_ln56_fu_1373_p1;
wire   [1:0] zext_ln57_fu_1393_p1;
wire   [1:0] add_ln27_2_fu_1397_p2;
wire   [1:0] zext_ln55_fu_1370_p1;
wire   [8:0] zext_ln1347_9_fu_1409_p1;
wire   [8:0] ret_9_fu_1412_p2;
wire  signed [31:0] sext_ln886_9_fu_1417_p1;
wire   [3:0] zext_ln27_3_fu_1429_p1;
wire   [3:0] zext_ln27_2_fu_1426_p1;
wire   [8:0] zext_ln1347_10_fu_1438_p1;
wire   [8:0] ret_10_fu_1441_p2;
wire  signed [31:0] sext_ln886_10_fu_1446_p1;
wire   [8:0] zext_ln1347_11_fu_1461_p1;
wire   [8:0] ret_11_fu_1464_p2;
wire  signed [31:0] sext_ln886_11_fu_1469_p1;
wire   [0:0] icmp_ln886_10_fu_1473_p2;
wire   [1:0] zext_ln59_fu_1458_p1;
wire   [1:0] zext_ln60_fu_1478_p1;
wire   [1:0] add_ln27_5_fu_1482_p2;
wire   [1:0] zext_ln58_fu_1455_p1;
wire   [8:0] zext_ln1347_12_fu_1494_p1;
wire   [8:0] ret_12_fu_1497_p2;
wire  signed [31:0] sext_ln886_12_fu_1502_p1;
wire   [8:0] zext_ln1347_13_fu_1511_p1;
wire   [8:0] ret_13_fu_1514_p2;
wire  signed [31:0] sext_ln886_13_fu_1519_p1;
wire   [8:0] zext_ln1347_14_fu_1528_p1;
wire   [8:0] ret_14_fu_1531_p2;
wire  signed [31:0] sext_ln886_14_fu_1536_p1;
wire   [8:0] zext_ln1347_15_fu_1554_p1;
wire   [8:0] ret_15_fu_1557_p2;
wire  signed [31:0] sext_ln886_15_fu_1562_p1;
wire   [0:0] icmp_ln886_14_fu_1566_p2;
wire   [1:0] zext_ln61_fu_1545_p1;
wire   [1:0] zext_ln62_fu_1548_p1;
wire   [1:0] zext_ln63_fu_1551_p1;
wire   [1:0] zext_ln27_fu_1571_p1;
wire   [2:0] zext_ln27_7_fu_1596_p1;
wire   [2:0] zext_ln27_6_fu_1593_p1;
wire   [2:0] add_ln27_9_fu_1599_p2;
wire   [2:0] zext_ln27_5_fu_1590_p1;
wire   [2:0] add_ln27_10_fu_1605_p2;
wire   [4:0] zext_ln27_8_fu_1611_p1;
wire   [4:0] zext_ln27_4_fu_1587_p1;
wire   [4:0] count_1_fu_1615_p2;
reg    grp_fu_687_ce;
reg    grp_fu_741_ce;
reg    grp_fu_756_ce;
reg    grp_fu_793_ce;
reg    grp_fu_866_ce;
reg    grp_fu_908_ce;
reg    grp_fu_922_ce;
reg    grp_fu_950_ce;
reg    grp_fu_969_ce;
reg    grp_fu_982_ce;
wire    ap_CS_fsm_state55;
reg   [23:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage8_subdone;
reg    ap_block_pp0_stage9_subdone;
reg    ap_block_pp0_stage11_subdone;
reg    ap_block_pp0_stage12_subdone;
reg    ap_block_pp0_stage13_subdone;
reg    ap_block_pp0_stage14_subdone;
reg    ap_block_pp0_stage15_subdone;
reg    ap_block_pp0_stage16_subdone;
reg    ap_block_pp0_stage17_subdone;
reg    ap_block_pp0_stage18_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [63:0] grp_fu_571_p00;
wire   [63:0] grp_fu_571_p10;
wire   [63:0] grp_fu_687_p00;
wire   [63:0] grp_fu_741_p00;
wire   [63:0] grp_fu_756_p00;
wire   [63:0] grp_fu_793_p00;
wire   [63:0] grp_fu_866_p00;
wire   [63:0] grp_fu_908_p00;
wire   [63:0] grp_fu_922_p00;
wire   [63:0] grp_fu_950_p00;
wire   [63:0] grp_fu_969_p00;
wire   [63:0] grp_fu_982_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 24'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

fast_accel_CTRL_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTRL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTRL_DATA_WIDTH ))
CTRL_s_axi_U(
    .AWVALID(s_axi_CTRL_AWVALID),
    .AWREADY(s_axi_CTRL_AWREADY),
    .AWADDR(s_axi_CTRL_AWADDR),
    .WVALID(s_axi_CTRL_WVALID),
    .WREADY(s_axi_CTRL_WREADY),
    .WDATA(s_axi_CTRL_WDATA),
    .WSTRB(s_axi_CTRL_WSTRB),
    .ARVALID(s_axi_CTRL_ARVALID),
    .ARREADY(s_axi_CTRL_ARREADY),
    .ARADDR(s_axi_CTRL_ARADDR),
    .RVALID(s_axi_CTRL_RVALID),
    .RREADY(s_axi_CTRL_RREADY),
    .RDATA(s_axi_CTRL_RDATA),
    .RRESP(s_axi_CTRL_RRESP),
    .BVALID(s_axi_CTRL_BVALID),
    .BREADY(s_axi_CTRL_BREADY),
    .BRESP(s_axi_CTRL_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .threshold(threshold),
    .rows(rows),
    .cols(cols),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

fast_accel_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .img_in(img_in),
    .img_out(img_out)
);

fast_accel_gmem_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 8 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ))
gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem_ARVALID),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(gmem_ARADDR),
    .I_ARID(1'd0),
    .I_ARLEN(32'd1),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(gmem_RREADY),
    .I_RDATA(gmem_RDATA),
    .I_RID(gmem_RID),
    .I_RUSER(gmem_RUSER),
    .I_RRESP(gmem_RRESP),
    .I_RLAST(gmem_RLAST),
    .I_AWVALID(gmem_AWVALID),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(reg_484),
    .I_AWID(1'd0),
    .I_AWLEN(32'd1),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(gmem_WVALID),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(gmem_WDATA),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(1'd1),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(gmem_BREADY),
    .I_BRESP(gmem_BRESP),
    .I_BID(gmem_BID),
    .I_BUSER(gmem_BUSER)
);

fast_accel_mul_32ns_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_2_1_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_571_p0),
    .din1(grp_fu_571_p1),
    .ce(1'b1),
    .dout(grp_fu_571_p2)
);

fast_accel_mul_32ns_32s_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32s_64_2_1_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_687_p0),
    .din1(grp_fu_687_p1),
    .ce(grp_fu_687_ce),
    .dout(grp_fu_687_p2)
);

fast_accel_mul_32ns_32s_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32s_64_2_1_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_741_p0),
    .din1(grp_fu_741_p1),
    .ce(grp_fu_741_ce),
    .dout(grp_fu_741_p2)
);

fast_accel_mul_32ns_32s_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32s_64_2_1_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_756_p0),
    .din1(grp_fu_756_p1),
    .ce(grp_fu_756_ce),
    .dout(grp_fu_756_p2)
);

fast_accel_mul_32ns_32s_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32s_64_2_1_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_793_p0),
    .din1(grp_fu_793_p1),
    .ce(grp_fu_793_ce),
    .dout(grp_fu_793_p2)
);

fast_accel_mul_32ns_32s_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32s_64_2_1_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_866_p0),
    .din1(grp_fu_866_p1),
    .ce(grp_fu_866_ce),
    .dout(grp_fu_866_p2)
);

fast_accel_mul_32ns_32s_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32s_64_2_1_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_908_p0),
    .din1(grp_fu_908_p1),
    .ce(grp_fu_908_ce),
    .dout(grp_fu_908_p2)
);

fast_accel_mul_32ns_32s_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32s_64_2_1_U8(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_922_p0),
    .din1(grp_fu_922_p1),
    .ce(grp_fu_922_ce),
    .dout(grp_fu_922_p2)
);

fast_accel_mul_32ns_32s_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32s_64_2_1_U9(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_950_p0),
    .din1(grp_fu_950_p1),
    .ce(grp_fu_950_ce),
    .dout(grp_fu_950_p2)
);

fast_accel_mul_33ns_32s_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 33 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_33ns_32s_64_2_1_U10(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_969_p0),
    .din1(grp_fu_969_p1),
    .ce(grp_fu_969_ce),
    .dout(grp_fu_969_p2)
);

fast_accel_mul_33ns_32s_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 33 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_33ns_32s_64_2_1_U11(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_982_p0),
    .din1(grp_fu_982_p1),
    .ce(grp_fu_982_ce),
    .dout(grp_fu_982_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_condition_pp0_exit_iter0_state11) & (1'b0 == ap_block_pp0_stage7_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage10_subdone)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_subdone)))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_reg_1774_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        indvar595_reg_463 <= add_ln16_1_reg_2028;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        indvar595_reg_463 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_417 <= add_ln14_5_reg_1952;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        indvar_flatten_reg_417 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_reg_429 <= select_ln14_4_reg_1795;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        indvar_reg_429 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        x_reg_452 <= add_ln16_reg_2023;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        x_reg_452 <= 32'd3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        y_reg_440 <= select_ln14_8_reg_1936;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        y_reg_440 <= 32'd3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        add_ln14_10_reg_1973 <= add_ln14_10_fu_955_p2;
        zext_ln14_4_reg_1963[31 : 0] <= zext_ln14_4_fu_944_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln14_2_reg_1712 <= add_ln14_2_fu_636_p2;
        add_ln39_2_reg_1749 <= add_ln39_2_fu_666_p2;
        add_ln41_1_reg_1754 <= add_ln41_1_fu_672_p2;
        add_ln42_2_reg_1759 <= add_ln42_2_fu_677_p2;
        add_ln52_reg_1719 <= add_ln52_fu_641_p2;
        add_ln53_reg_1725 <= add_ln53_fu_646_p2;
        add_ln58_reg_1731 <= add_ln58_fu_651_p2;
        add_ln59_reg_1737 <= add_ln59_fu_656_p2;
        add_ln60_reg_1743 <= add_ln60_fu_661_p2;
        bound_reg_1764 <= grp_fu_571_p2;
        sext_ln14_reg_1698 <= sext_ln14_fu_577_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln14_5_reg_1952 <= add_ln14_5_fu_938_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_fu_692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln14_6_reg_1801 <= add_ln14_6_fu_732_p2;
        icmp_ln16_reg_1778 <= icmp_ln16_fu_697_p2;
        select_ln14_3_reg_1789 <= select_ln14_3_fu_702_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add_ln14_7_reg_1835 <= add_ln14_7_fu_768_p2;
        add_ln41_2_reg_1840 <= add_ln41_2_fu_778_p2;
        mul_ln14_reg_1823 <= grp_fu_741_p2;
        select_ln14_2_reg_1817 <= select_ln14_2_fu_746_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage8) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        add_ln14_8_reg_1978 <= add_ln14_8_fu_961_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        add_ln14_9_reg_1899 <= add_ln14_9_fu_878_p2;
        gmem_addr_4_reg_1904 <= add_ln43_fu_888_p2;
        mul_ln14_2_reg_1894 <= grp_fu_793_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        add_ln14_reg_1673 <= add_ln14_fu_493_p2;
        cols_read_reg_1627 <= cols;
        img_in_read_reg_1661 <= img_in;
        img_out_read_reg_1636 <= img_out;
        select_ln14_1_reg_1683 <= select_ln14_1_fu_557_p3;
        select_ln14_reg_1678 <= select_ln14_fu_527_p3;
        threshold_read_reg_1641 <= threshold;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage9) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln16_1_reg_2028 <= add_ln16_1_fu_1006_p2;
        add_ln16_reg_2023 <= add_ln16_fu_1001_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage8) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        add_ln27_1_reg_2224 <= add_ln27_1_fu_1348_p2;
        icmp_ln886_5_reg_2214 <= icmp_ln886_5_fu_1333_p2;
        point_V_7_reg_2219 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage10) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        add_ln27_3_reg_2244 <= add_ln27_3_fu_1403_p2;
        point_V_9_reg_2239 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage11) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001))) begin
        add_ln27_4_reg_2254 <= add_ln27_4_fu_1432_p2;
        icmp_ln886_8_reg_2249 <= icmp_ln886_8_fu_1421_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_reg_2113_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001))) begin
        add_ln27_6_reg_2279 <= add_ln27_6_fu_1488_p2;
        point_V_12_reg_2274 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_reg_2113_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add_ln27_7_reg_2314 <= add_ln27_7_fu_1575_p2;
        add_ln27_8_reg_2319 <= add_ln27_8_fu_1581_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage9) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001))) begin
        add_ln39_reg_2018 <= add_ln39_fu_995_p2;
        mul_ln14_5_reg_2003 <= grp_fu_969_p2;
        select_ln14_11_reg_1998 <= select_ln14_11_fu_987_p3;
        zext_ln16_reg_2008[31 : 0] <= zext_ln16_fu_992_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage11) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001))) begin
        add_ln42_reg_2043 <= add_ln42_fu_1011_p2;
        center_V_reg_2038 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        count_for_reg_2194 <= count_for_fu_1293_p2;
        point_V_5_reg_2199 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage17) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage17_11001))) begin
        count_pre_2_reg_2108 <= count_pre_2_fu_1123_p2;
        icmp_ln21_reg_2113 <= icmp_ln21_fu_1129_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage13) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001))) begin
        count_pre_reg_2073 <= count_pre_fu_1031_p2;
        point_V_reg_2078 <= gmem_RDATA;
        zext_ln1347_reg_2054[7 : 0] <= zext_ln1347_fu_1018_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_reg_1778 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        empty_18_reg_1845 <= empty_18_fu_784_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_reg_1778 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        empty_19_reg_1910 <= grp_fu_866_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        empty_20_reg_1957 <= grp_fu_922_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        empty_reg_1806 <= grp_fu_687_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_fu_1129_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage17) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage17_11001))) begin
        gmem_addr_10_reg_2141 <= add_ln56_1_fu_1195_p2;
        gmem_addr_11_reg_2147 <= add_ln57_fu_1206_p2;
        gmem_addr_12_reg_2153 <= add_ln58_1_fu_1216_p2;
        gmem_addr_13_reg_2159 <= add_ln59_1_fu_1226_p2;
        gmem_addr_14_reg_2165 <= add_ln60_1_fu_1237_p2;
        gmem_addr_15_reg_2171 <= add_ln61_fu_1248_p2;
        gmem_addr_16_reg_2177 <= add_ln62_fu_1259_p2;
        gmem_addr_17_reg_2183 <= add_ln63_fu_1270_p2;
        gmem_addr_6_reg_2117 <= add_ln52_1_fu_1135_p2;
        gmem_addr_7_reg_2123 <= add_ln53_2_fu_1150_p2;
        gmem_addr_8_reg_2129 <= add_ln54_1_fu_1165_p2;
        gmem_addr_9_reg_2135 <= add_ln55_1_fu_1180_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        gmem_addr_1_reg_1871 <= add_ln40_1_fu_822_p2;
        gmem_addr_2_reg_1877 <= add_ln41_fu_841_p2;
        gmem_addr_3_reg_1883 <= add_ln42_1_fu_852_p2;
        gmem_addr_reg_1865 <= add_ln39_1_fu_806_p2;
        mul_ln14_1_reg_1850 <= grp_fu_756_p2;
        zext_ln16_1_reg_1860[31 : 0] <= zext_ln16_1_fu_798_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln14_reg_1774 <= icmp_ln14_fu_692_p2;
        icmp_ln14_reg_1774_pp0_iter1_reg <= icmp_ln14_reg_1774;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001))) begin
        icmp_ln21_reg_2113_pp0_iter1_reg <= icmp_ln21_reg_2113;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_reg_2113_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        icmp_ln28_reg_2324 <= icmp_ln28_fu_1621_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_reg_2113_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001))) begin
        icmp_ln886_11_reg_2284 <= icmp_ln886_11_fu_1506_p2;
        point_V_13_reg_2289 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_reg_2113_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln886_12_reg_2294 <= icmp_ln886_12_fu_1523_p2;
        point_V_14_reg_2299 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_reg_2113_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        icmp_ln886_13_reg_2304 <= icmp_ln886_13_fu_1540_p2;
        point_V_15_reg_2309 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage15) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001))) begin
        icmp_ln886_1_reg_2093 <= icmp_ln886_1_fu_1065_p2;
        point_V_3_reg_2098 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage16) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage16_11001))) begin
        icmp_ln886_2_reg_2103 <= icmp_ln886_2_fu_1082_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        icmp_ln886_4_reg_2204 <= icmp_ln886_4_fu_1310_p2;
        point_V_6_reg_2209 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage9) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001))) begin
        icmp_ln886_6_reg_2229 <= icmp_ln886_6_fu_1365_p2;
        point_V_8_reg_2234 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage17) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage17_11001))) begin
        icmp_ln886_9_reg_2264 <= icmp_ln886_9_fu_1450_p2;
        point_V_11_reg_2269 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage14) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001))) begin
        icmp_ln886_reg_2083 <= icmp_ln886_fu_1048_p2;
        point_V_2_reg_2088 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_reg_1778 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        indvars_iv_next578_mid1_reg_1926 <= indvars_iv_next578_mid1_fu_913_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        indvars_iv_next578_reg_1915 <= indvars_iv_next578_fu_899_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage10) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        mul_ln14_3_reg_2033 <= grp_fu_982_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        mul_ln14_4_reg_1942 <= grp_fu_908_p2;
        select_ln14_10_reg_1947 <= select_ln14_10_fu_933_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_reg_1778 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        p_mid195_reg_1983 <= grp_fu_950_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage16) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage16_11001))) begin
        point_V_10_reg_2259 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage12) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001))) begin
        point_V_16_reg_2049 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        point_V_4_reg_2189 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln21_fu_1129_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln21_fu_1129_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage17) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_484 <= grp_fu_474_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_fu_692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        select_ln14_4_reg_1795 <= select_ln14_4_fu_716_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        select_ln14_8_reg_1936 <= select_ln14_8_fu_927_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001))) begin
        zext_ln1347_reg_2054_pp0_iter1_reg[7 : 0] <= zext_ln1347_reg_2054[7 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln14_reg_1774 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state11 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state11 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln14_reg_1774_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2))) begin
        ap_phi_mux_indvar595_phi_fu_467_p4 = add_ln16_1_reg_2028;
    end else begin
        ap_phi_mux_indvar595_phi_fu_467_p4 = indvar595_reg_463;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_421_p4 = add_ln14_5_reg_1952;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_421_p4 = indvar_flatten_reg_417;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_indvar_phi_fu_433_p4 = select_ln14_4_reg_1795;
    end else begin
        ap_phi_mux_indvar_phi_fu_433_p4 = indvar_reg_429;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_x_phi_fu_456_p4 = add_ln16_reg_2023;
    end else begin
        ap_phi_mux_x_phi_fu_456_p4 = x_reg_452;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_y_phi_fu_444_p4 = select_ln14_8_reg_1936;
    end else begin
        ap_phi_mux_y_phi_fu_444_p4 = y_reg_440;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001))) begin
        gmem_ARADDR = gmem_addr_17_reg_2183;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001))) begin
        gmem_ARADDR = gmem_addr_16_reg_2177;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001))) begin
        gmem_ARADDR = gmem_addr_15_reg_2171;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001))) begin
        gmem_ARADDR = gmem_addr_14_reg_2165;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        gmem_ARADDR = gmem_addr_13_reg_2159;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001))) begin
        gmem_ARADDR = gmem_addr_12_reg_2153;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        gmem_ARADDR = gmem_addr_11_reg_2147;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        gmem_ARADDR = gmem_addr_10_reg_2141;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        gmem_ARADDR = gmem_addr_9_reg_2135;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        gmem_ARADDR = gmem_addr_8_reg_2129;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage19) & (ap_predicate_op308_readreq_state23 == 1'b1) & (1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        gmem_ARADDR = gmem_addr_7_reg_2123;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001) & (ap_predicate_op304_readreq_state22 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        gmem_ARADDR = gmem_addr_6_reg_2117;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage8) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        gmem_ARADDR = gmem_addr_4_reg_1904;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        gmem_ARADDR = gmem_addr_3_reg_1883;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        gmem_ARADDR = gmem_addr_2_reg_1877;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        gmem_ARADDR = gmem_addr_1_reg_1871;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        gmem_ARADDR = gmem_addr_reg_1865;
    end else begin
        gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (ap_predicate_op308_readreq_state23 == 1'b1) & (1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001) & (ap_predicate_op304_readreq_state22 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        gmem_ARVALID = 1'b1;
    end else begin
        gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001) & (ap_predicate_op306_writereq_state22 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001) & (ap_predicate_op305_writereq_state22 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        gmem_AWVALID = 1'b1;
    end else begin
        gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op503_writeresp_state54 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001)) | ((ap_predicate_op500_writeresp_state53 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd1) & (1'b0 == ap_block_pp0_stage4_11001)))) begin
        gmem_BREADY = 1'b1;
    end else begin
        gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage15) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln21_reg_2113_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln21_reg_2113_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln21_reg_2113_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage19_11001)) | ((icmp_ln21_reg_2113_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage18_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage17_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage16_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001)))) begin
        gmem_RREADY = 1'b1;
    end else begin
        gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op493_write_state49 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_01001))) begin
        gmem_WDATA = 8'd255;
    end else if ((((ap_predicate_op491_write_state48 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_01001)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (ap_predicate_op309_write_state23 == 1'b1) & (1'b0 == ap_block_pp0_stage19_01001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        gmem_WDATA = 8'd0;
    end else begin
        gmem_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op493_write_state49 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_predicate_op491_write_state48 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (ap_predicate_op309_write_state23 == 1'b1) & (1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        gmem_WVALID = 1'b1;
    end else begin
        gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage14)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage13)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage12)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage11)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage10)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage3)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage9)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage2)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage1)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (icmp_ln21_reg_2113 == 1'd0) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (icmp_ln21_reg_2113 == 1'd0) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage18) & (icmp_ln21_reg_2113 == 1'd0) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (icmp_ln21_reg_2113 == 1'd1) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln28_reg_2324 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln21_reg_2113_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9)) | ((icmp_ln28_reg_2324 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln21_reg_2113_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd1) & (1'b0 == ap_block_pp0_stage4)))) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage15) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln21_reg_2113_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln21_reg_2113_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln21_reg_2113_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage19)) | ((icmp_ln21_reg_2113_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage18)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage17)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage16)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage10)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage9)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage8)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage7)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage6)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0) & (1'b0 == ap_block_pp0_stage5)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln28_reg_2324 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln21_reg_2113_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((icmp_ln28_reg_2324 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln21_reg_2113_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (icmp_ln21_reg_2113 == 1'd1) & (icmp_ln14_reg_1774 == 1'd0) & (1'b0 == ap_block_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_687_ce = 1'b1;
    end else begin
        grp_fu_687_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        grp_fu_741_ce = 1'b1;
    end else begin
        grp_fu_741_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        grp_fu_756_ce = 1'b1;
    end else begin
        grp_fu_756_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)))) begin
        grp_fu_793_ce = 1'b1;
    end else begin
        grp_fu_793_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)))) begin
        grp_fu_866_ce = 1'b1;
    end else begin
        grp_fu_866_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)))) begin
        grp_fu_908_ce = 1'b1;
    end else begin
        grp_fu_908_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)))) begin
        grp_fu_922_ce = 1'b1;
    end else begin
        grp_fu_922_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)))) begin
        grp_fu_950_ce = 1'b1;
    end else begin
        grp_fu_950_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)))) begin
        grp_fu_969_ce = 1'b1;
    end else begin
        grp_fu_969_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)))) begin
        grp_fu_982_ce = 1'b1;
    end else begin
        grp_fu_982_ce = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln14_reg_1774 == 1'd1) & (1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage7_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln14_reg_1774 == 1'd1) & (1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((~((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage10_subdone)) & (1'b0 == ap_block_pp0_stage10_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage10_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln14_10_fu_955_p2 = (zext_ln14_4_fu_944_p1 + 33'd2);

assign add_ln14_11_fu_710_p2 = (ap_phi_mux_indvar_phi_fu_433_p4 + 32'd1);

assign add_ln14_1_fu_499_p2 = ($signed(rows) + $signed(32'd4294967293));

assign add_ln14_2_fu_636_p2 = (img_in_read_reg_1661 + 64'd3);

assign add_ln14_3_fu_521_p2 = ($signed(rows) + $signed(32'd4294967290));

assign add_ln14_4_fu_551_p0 = cols;

assign add_ln14_4_fu_551_p2 = ($signed(add_ln14_4_fu_551_p0) + $signed(32'd4294967290));

assign add_ln14_5_fu_938_p2 = (indvar_flatten_reg_417 + 64'd1);

assign add_ln14_6_fu_732_p2 = (ap_phi_mux_indvar_phi_fu_433_p4 + select_ln14_5_fu_724_p3);

assign add_ln14_7_fu_768_p2 = (y_reg_440 + select_ln14_7_fu_761_p3);

assign add_ln14_8_fu_961_p2 = (zext_ln14_4_reg_1963 + 33'd3);

assign add_ln14_9_fu_878_p2 = (y_reg_440 + select_ln14_9_fu_871_p3);

assign add_ln14_fu_493_p0 = cols;

assign add_ln14_fu_493_p2 = ($signed(add_ln14_fu_493_p0) + $signed(32'd4294967293));

assign add_ln16_1_fu_1006_p2 = (select_ln14_2_reg_1817 + 32'd1);

assign add_ln16_fu_1001_p2 = (select_ln14_3_reg_1789 + 32'd1);

assign add_ln27_10_fu_1605_p2 = (add_ln27_9_fu_1599_p2 + zext_ln27_5_fu_1590_p1);

assign add_ln27_1_fu_1348_p2 = (zext_ln27_1_fu_1344_p1 + count_pre_2_reg_2108);

assign add_ln27_2_fu_1397_p2 = (zext_ln56_fu_1373_p1 + zext_ln57_fu_1393_p1);

assign add_ln27_3_fu_1403_p2 = (add_ln27_2_fu_1397_p2 + zext_ln55_fu_1370_p1);

assign add_ln27_4_fu_1432_p2 = (zext_ln27_3_fu_1429_p1 + zext_ln27_2_fu_1426_p1);

assign add_ln27_5_fu_1482_p2 = (zext_ln59_fu_1458_p1 + zext_ln60_fu_1478_p1);

assign add_ln27_6_fu_1488_p2 = (add_ln27_5_fu_1482_p2 + zext_ln58_fu_1455_p1);

assign add_ln27_7_fu_1575_p2 = (zext_ln61_fu_1545_p1 + zext_ln62_fu_1548_p1);

assign add_ln27_8_fu_1581_p2 = (zext_ln63_fu_1551_p1 + zext_ln27_fu_1571_p1);

assign add_ln27_9_fu_1599_p2 = (zext_ln27_7_fu_1596_p1 + zext_ln27_6_fu_1593_p1);

assign add_ln27_fu_1338_p2 = (zext_ln52_fu_1315_p1 + zext_ln54_fu_1318_p1);

assign add_ln39_1_fu_806_p2 = (add_ln39_3_fu_801_p2 + add_ln39_2_reg_1749);

assign add_ln39_2_fu_666_p2 = ($signed(sext_ln14_3_fu_600_p1) + $signed(add_ln14_2_fu_636_p2));

assign add_ln39_3_fu_801_p2 = (mul_ln14_reg_1823 + zext_ln16_1_fu_798_p1);

assign add_ln39_fu_995_p2 = (zext_ln16_fu_992_p1 + select_ln14_6_fu_974_p3);

assign add_ln40_1_fu_822_p2 = (add_ln40_2_fu_817_p2 + mul_ln14_reg_1823);

assign add_ln40_2_fu_817_p2 = (add_ln14_2_reg_1712 + zext_ln16_1_fu_798_p1);

assign add_ln40_fu_1087_p2 = (zext_ln16_reg_2008 + mul_ln14_2_reg_1894);

assign add_ln41_1_fu_672_p2 = ($signed(sext_ln14_3_fu_600_p1) + $signed(img_in_read_reg_1661));

assign add_ln41_2_fu_778_p2 = (zext_ln16_2_fu_774_p1 + 33'd6);

assign add_ln41_3_fu_836_p2 = (zext_ln41_fu_833_p1 + mul_ln14_reg_1823);

assign add_ln41_fu_841_p2 = (add_ln41_3_fu_836_p2 + add_ln41_1_reg_1754);

assign add_ln42_1_fu_852_p2 = (add_ln39_3_fu_801_p2 + add_ln42_2_reg_1759);

assign add_ln42_2_fu_677_p2 = ($signed(sext_ln14_6_fu_632_p1) + $signed(add_ln14_2_fu_636_p2));

assign add_ln42_fu_1011_p2 = (zext_ln16_reg_2008 + mul_ln14_3_reg_2033);

assign add_ln43_1_fu_884_p2 = (zext_ln16_1_reg_1860 + img_in_read_reg_1661);

assign add_ln43_2_fu_1103_p2 = (zext_ln40_fu_1091_p1 + zext_ln43_fu_1097_p1);

assign add_ln43_3_fu_1113_p2 = (zext_ln42_fu_1094_p1 + zext_ln43_1_fu_1100_p1);

assign add_ln43_fu_888_p2 = (add_ln43_1_fu_884_p2 + mul_ln14_1_reg_1850);

assign add_ln52_1_fu_1135_p2 = (add_ln40_fu_1087_p2 + add_ln52_reg_1719);

assign add_ln52_fu_641_p2 = (img_in_read_reg_1661 + 64'd1);

assign add_ln53_1_fu_1146_p2 = (zext_ln16_reg_2008 + mul_ln14_4_reg_1942);

assign add_ln53_2_fu_1150_p2 = (add_ln53_1_fu_1146_p2 + add_ln53_reg_1725);

assign add_ln53_fu_646_p2 = (img_in_read_reg_1661 + 64'd2);

assign add_ln54_1_fu_1165_p2 = (add_ln54_fu_1161_p2 + add_ln14_2_reg_1712);

assign add_ln54_fu_1161_p2 = (zext_ln16_reg_2008 + select_ln14_10_reg_1947);

assign add_ln55_1_fu_1180_p2 = (add_ln55_fu_1176_p2 + add_ln14_2_reg_1712);

assign add_ln55_fu_1176_p2 = (zext_ln16_reg_2008 + select_ln14_11_reg_1998);

assign add_ln56_1_fu_1195_p2 = (add_ln56_fu_1191_p2 + add_ln53_reg_1725);

assign add_ln56_fu_1191_p2 = (zext_ln16_reg_2008 + mul_ln14_5_reg_2003);

assign add_ln57_fu_1206_p2 = (add_ln42_reg_2043 + add_ln52_reg_1719);

assign add_ln58_1_fu_1216_p2 = (add_ln42_reg_2043 + add_ln58_reg_1731);

assign add_ln58_fu_651_p2 = ($signed(img_in_read_reg_1661) + $signed(64'd18446744073709551615));

assign add_ln59_1_fu_1226_p2 = (add_ln56_fu_1191_p2 + add_ln59_reg_1737);

assign add_ln59_fu_656_p2 = ($signed(img_in_read_reg_1661) + $signed(64'd18446744073709551614));

assign add_ln60_1_fu_1237_p2 = (add_ln55_fu_1176_p2 + add_ln60_reg_1743);

assign add_ln60_fu_661_p2 = ($signed(img_in_read_reg_1661) + $signed(64'd18446744073709551613));

assign add_ln61_fu_1248_p2 = (add_ln54_fu_1161_p2 + add_ln60_reg_1743);

assign add_ln62_fu_1259_p2 = (add_ln53_1_fu_1146_p2 + add_ln59_reg_1737);

assign add_ln63_fu_1270_p2 = (add_ln40_fu_1087_p2 + add_ln58_reg_1731);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd23];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'b1 == ap_block_state24_io) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln21_reg_2113_pp0_iter1_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'b1 == ap_block_state24_io) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln21_reg_2113_pp0_iter1_reg == 1'd0)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_11001 = (((ap_predicate_op503_writeresp_state54 == 1'b1) & (gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state34_io) | ((gmem_RVALID == 1'b0) & (icmp_ln21_reg_2113 == 1'd0)))));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone = (((ap_predicate_op503_writeresp_state54 == 1'b1) & (gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state34_io) | ((gmem_RVALID == 1'b0) & (icmp_ln21_reg_2113 == 1'd0)))));
end

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_11001 = (((1'b1 == ap_block_state35_io) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((gmem_RVALID == 1'b0) & (icmp_ln14_reg_1774 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone = (((1'b1 == ap_block_state35_io) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((gmem_RVALID == 1'b0) & (icmp_ln14_reg_1774 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_11001 = (((1'b1 == ap_block_state36_io) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((gmem_RVALID == 1'b0) & (icmp_ln14_reg_1774 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage12_subdone = (((1'b1 == ap_block_state36_io) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((gmem_RVALID == 1'b0) & (icmp_ln14_reg_1774 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage13_11001 = (((1'b1 == ap_block_state37_io) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((gmem_RVALID == 1'b0) & (icmp_ln14_reg_1774 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage13_subdone = (((1'b1 == ap_block_state37_io) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((gmem_RVALID == 1'b0) & (icmp_ln14_reg_1774 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_11001 = (((gmem_RVALID == 1'b0) & (icmp_ln14_reg_1774 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_block_state38_io) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage14_subdone = (((gmem_RVALID == 1'b0) & (icmp_ln14_reg_1774 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_block_state38_io) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_11001 = ((gmem_RVALID == 1'b0) & (icmp_ln14_reg_1774 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone = ((gmem_RVALID == 1'b0) & (icmp_ln14_reg_1774 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage16_11001 = ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage16_subdone = ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0));
end

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage17_11001 = ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage17_subdone = ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0));
end

assign ap_block_pp0_stage18 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage18_11001 = (((gmem_RVALID == 1'b0) & (icmp_ln21_reg_2113_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_block_state22_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage18_subdone = (((gmem_RVALID == 1'b0) & (icmp_ln21_reg_2113_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_block_state22_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage19_01001 = ((gmem_RVALID == 1'b0) & (icmp_ln21_reg_2113_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage19_11001 = (((gmem_RVALID == 1'b0) & (icmp_ln21_reg_2113_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_block_state23_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage19_subdone = (((gmem_RVALID == 1'b0) & (icmp_ln21_reg_2113_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_block_state23_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((1'b1 == ap_block_state25_io) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln21_reg_2113_pp0_iter1_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((1'b1 == ap_block_state25_io) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln21_reg_2113_pp0_iter1_reg == 1'd0)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((1'b1 == ap_block_state26_io) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((1'b1 == ap_block_state26_io) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((1'b1 == ap_block_state27_io) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((1'b1 == ap_block_state27_io) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_01001 = ((gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd1));
end

always @ (*) begin
    ap_block_pp0_stage4_11001 = (((1'b1 == ap_block_state48_io) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd1)) | ((1'b1 == ap_block_state8_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = (((1'b1 == ap_block_state48_io) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd1)) | ((1'b1 == ap_block_state8_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_01001 = ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage5_11001 = (((1'b1 == ap_block_state49_io) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b1 == ap_block_state9_io) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = (((1'b1 == ap_block_state49_io) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b1 == ap_block_state9_io) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0)));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_11001 = (((1'b1 == ap_block_state10_io) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = (((1'b1 == ap_block_state10_io) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0)));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_11001 = (((1'b1 == ap_block_state11_io) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = (((1'b1 == ap_block_state11_io) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0)));
end

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_11001 = (((1'b1 == ap_block_state12_io) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone = (((1'b1 == ap_block_state12_io) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln21_reg_2113 == 1'd0)));
end

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_11001 = (((ap_predicate_op500_writeresp_state53 == 1'b1) & (gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state33_io) | ((gmem_RVALID == 1'b0) & (icmp_ln21_reg_2113 == 1'd0)))));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone = (((ap_predicate_op500_writeresp_state53 == 1'b1) & (gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state33_io) | ((gmem_RVALID == 1'b0) & (icmp_ln21_reg_2113 == 1'd0)))));
end

always @ (*) begin
    ap_block_state10_io = ((gmem_ARREADY == 1'b0) & (icmp_ln14_reg_1774 == 1'd0));
end

assign ap_block_state10_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_io = ((gmem_ARREADY == 1'b0) & (icmp_ln14_reg_1774 == 1'd0));
end

assign ap_block_state11_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state12_io = ((gmem_ARREADY == 1'b0) & (icmp_ln14_reg_1774 == 1'd0));
end

assign ap_block_state12_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state15_pp0_stage11_iter0 = ((gmem_RVALID == 1'b0) & (icmp_ln14_reg_1774 == 1'd0));
end

always @ (*) begin
    ap_block_state16_pp0_stage12_iter0 = ((gmem_RVALID == 1'b0) & (icmp_ln14_reg_1774 == 1'd0));
end

always @ (*) begin
    ap_block_state17_pp0_stage13_iter0 = ((gmem_RVALID == 1'b0) & (icmp_ln14_reg_1774 == 1'd0));
end

always @ (*) begin
    ap_block_state18_pp0_stage14_iter0 = ((gmem_RVALID == 1'b0) & (icmp_ln14_reg_1774 == 1'd0));
end

always @ (*) begin
    ap_block_state19_pp0_stage15_iter0 = ((gmem_RVALID == 1'b0) & (icmp_ln14_reg_1774 == 1'd0));
end

assign ap_block_state20_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage17_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state22_io = (((gmem_ARREADY == 1'b0) & (ap_predicate_op304_readreq_state22 == 1'b1)) | ((gmem_AWREADY == 1'b0) & (ap_predicate_op306_writereq_state22 == 1'b1)) | ((gmem_AWREADY == 1'b0) & (ap_predicate_op305_writereq_state22 == 1'b1)));
end

assign ap_block_state22_pp0_stage18_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state23_io = (((gmem_WREADY == 1'b0) & (ap_predicate_op309_write_state23 == 1'b1)) | ((gmem_ARREADY == 1'b0) & (ap_predicate_op308_readreq_state23 == 1'b1)));
end

assign ap_block_state23_pp0_stage19_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state24_io = ((gmem_ARREADY == 1'b0) & (icmp_ln21_reg_2113 == 1'd0));
end

assign ap_block_state24_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state25_io = ((gmem_ARREADY == 1'b0) & (icmp_ln21_reg_2113 == 1'd0));
end

assign ap_block_state25_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state26_io = ((gmem_ARREADY == 1'b0) & (icmp_ln21_reg_2113 == 1'd0));
end

assign ap_block_state26_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state27_io = ((gmem_ARREADY == 1'b0) & (icmp_ln21_reg_2113 == 1'd0));
end

assign ap_block_state27_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state28_pp0_stage4_iter1 = ((gmem_BVALID == 1'b0) & (icmp_ln21_reg_2113 == 1'd1));
end

always @ (*) begin
    ap_block_state29_pp0_stage5_iter1 = ((gmem_RVALID == 1'b0) & (icmp_ln21_reg_2113 == 1'd0));
end

always @ (*) begin
    ap_block_state30_pp0_stage6_iter1 = ((gmem_RVALID == 1'b0) & (icmp_ln21_reg_2113 == 1'd0));
end

always @ (*) begin
    ap_block_state31_pp0_stage7_iter1 = ((gmem_RVALID == 1'b0) & (icmp_ln21_reg_2113 == 1'd0));
end

always @ (*) begin
    ap_block_state32_pp0_stage8_iter1 = ((gmem_RVALID == 1'b0) & (icmp_ln21_reg_2113 == 1'd0));
end

always @ (*) begin
    ap_block_state33_io = ((gmem_ARREADY == 1'b0) & (icmp_ln21_reg_2113 == 1'd0));
end

always @ (*) begin
    ap_block_state33_pp0_stage9_iter1 = ((gmem_RVALID == 1'b0) & (icmp_ln21_reg_2113 == 1'd0));
end

always @ (*) begin
    ap_block_state34_io = ((gmem_ARREADY == 1'b0) & (icmp_ln21_reg_2113 == 1'd0));
end

always @ (*) begin
    ap_block_state34_pp0_stage10_iter1 = ((gmem_RVALID == 1'b0) & (icmp_ln21_reg_2113 == 1'd0));
end

always @ (*) begin
    ap_block_state35_io = ((gmem_ARREADY == 1'b0) & (icmp_ln21_reg_2113 == 1'd0));
end

assign ap_block_state35_pp0_stage11_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state36_io = ((gmem_ARREADY == 1'b0) & (icmp_ln21_reg_2113 == 1'd0));
end

assign ap_block_state36_pp0_stage12_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state37_io = ((gmem_ARREADY == 1'b0) & (icmp_ln21_reg_2113 == 1'd0));
end

assign ap_block_state37_pp0_stage13_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state38_io = ((gmem_ARREADY == 1'b0) & (icmp_ln21_reg_2113 == 1'd0));
end

assign ap_block_state38_pp0_stage14_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage15_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state40_pp0_stage16_iter1 = ((gmem_RVALID == 1'b0) & (icmp_ln21_reg_2113 == 1'd0));
end

always @ (*) begin
    ap_block_state41_pp0_stage17_iter1 = ((gmem_RVALID == 1'b0) & (icmp_ln21_reg_2113 == 1'd0));
end

always @ (*) begin
    ap_block_state42_pp0_stage18_iter1 = ((gmem_RVALID == 1'b0) & (icmp_ln21_reg_2113_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state43_pp0_stage19_iter1 = ((gmem_RVALID == 1'b0) & (icmp_ln21_reg_2113_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state44_pp0_stage0_iter2 = ((gmem_RVALID == 1'b0) & (icmp_ln21_reg_2113_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state45_pp0_stage1_iter2 = ((gmem_RVALID == 1'b0) & (icmp_ln21_reg_2113_pp0_iter1_reg == 1'd0));
end

assign ap_block_state46_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state48_io = ((ap_predicate_op491_write_state48 == 1'b1) & (gmem_WREADY == 1'b0));
end

assign ap_block_state48_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state49_io = ((ap_predicate_op493_write_state49 == 1'b1) & (gmem_WREADY == 1'b0));
end

assign ap_block_state49_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage8_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state53_pp0_stage9_iter2 = ((ap_predicate_op500_writeresp_state53 == 1'b1) & (gmem_BVALID == 1'b0));
end

always @ (*) begin
    ap_block_state54_pp0_stage10_iter2 = ((ap_predicate_op503_writeresp_state54 == 1'b1) & (gmem_BVALID == 1'b0));
end

assign ap_block_state5_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_io = ((gmem_ARREADY == 1'b0) & (icmp_ln14_reg_1774 == 1'd0));
end

assign ap_block_state8_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_io = ((gmem_ARREADY == 1'b0) & (icmp_ln14_reg_1774 == 1'd0));
end

assign ap_block_state9_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op304_readreq_state22 = ((icmp_ln21_reg_2113 == 1'd0) & (icmp_ln14_reg_1774 == 1'd0));
end

always @ (*) begin
    ap_predicate_op305_writereq_state22 = ((icmp_ln21_reg_2113 == 1'd0) & (icmp_ln14_reg_1774 == 1'd0));
end

always @ (*) begin
    ap_predicate_op306_writereq_state22 = ((icmp_ln21_reg_2113 == 1'd1) & (icmp_ln14_reg_1774 == 1'd0));
end

always @ (*) begin
    ap_predicate_op308_readreq_state23 = ((icmp_ln21_reg_2113 == 1'd0) & (icmp_ln14_reg_1774 == 1'd0));
end

always @ (*) begin
    ap_predicate_op309_write_state23 = ((icmp_ln21_reg_2113 == 1'd1) & (icmp_ln14_reg_1774 == 1'd0));
end

always @ (*) begin
    ap_predicate_op491_write_state48 = ((icmp_ln28_reg_2324 == 1'd0) & (icmp_ln21_reg_2113_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op493_write_state49 = ((icmp_ln28_reg_2324 == 1'd1) & (icmp_ln21_reg_2113_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op500_writeresp_state53 = ((icmp_ln28_reg_2324 == 1'd0) & (icmp_ln21_reg_2113_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op503_writeresp_state54 = ((icmp_ln28_reg_2324 == 1'd1) & (icmp_ln21_reg_2113_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign count_1_fu_1615_p2 = (zext_ln27_8_fu_1611_p1 + zext_ln27_4_fu_1587_p1);

assign count_for_fu_1293_p2 = (($signed(sext_ln886_4_fu_1289_p1) > $signed(threshold_read_reg_1641)) ? 1'b1 : 1'b0);

assign count_pre_2_fu_1123_p2 = (zext_ln43_3_fu_1119_p1 + zext_ln43_2_fu_1109_p1);

assign count_pre_fu_1031_p2 = (($signed(sext_ln886_fu_1027_p1) > $signed(threshold_read_reg_1641)) ? 1'b1 : 1'b0);

assign empty_18_fu_784_p2 = ($signed(y_reg_440) + $signed(32'd4294967295));

assign grp_fu_474_p2 = (add_ln39_reg_2018 + img_out_read_reg_1636);

assign grp_fu_571_p0 = grp_fu_571_p00;

assign grp_fu_571_p00 = select_ln14_reg_1678;

assign grp_fu_571_p1 = grp_fu_571_p10;

assign grp_fu_571_p10 = select_ln14_1_reg_1683;

assign grp_fu_687_p0 = grp_fu_687_p00;

assign grp_fu_687_p00 = ap_phi_mux_y_phi_fu_444_p4;

assign grp_fu_687_p1 = sext_ln14_reg_1698;

assign grp_fu_741_p0 = grp_fu_741_p00;

assign grp_fu_741_p00 = select_ln14_4_reg_1795;

assign grp_fu_741_p1 = sext_ln14_reg_1698;

assign grp_fu_756_p0 = grp_fu_756_p00;

assign grp_fu_756_p00 = add_ln14_6_reg_1801;

assign grp_fu_756_p1 = sext_ln14_reg_1698;

assign grp_fu_793_p0 = grp_fu_793_p00;

assign grp_fu_793_p00 = add_ln14_7_reg_1835;

assign grp_fu_793_p1 = sext_ln14_reg_1698;

assign grp_fu_866_p0 = grp_fu_866_p00;

assign grp_fu_866_p00 = empty_18_reg_1845;

assign grp_fu_866_p1 = sext_ln14_reg_1698;

assign grp_fu_908_p0 = grp_fu_908_p00;

assign grp_fu_908_p00 = add_ln14_9_reg_1899;

assign grp_fu_908_p1 = sext_ln14_reg_1698;

assign grp_fu_922_p0 = grp_fu_922_p00;

assign grp_fu_922_p00 = indvars_iv_next578_reg_1915;

assign grp_fu_922_p1 = sext_ln14_reg_1698;

assign grp_fu_950_p0 = grp_fu_950_p00;

assign grp_fu_950_p00 = indvars_iv_next578_mid1_reg_1926;

assign grp_fu_950_p1 = sext_ln14_reg_1698;

assign grp_fu_969_p0 = grp_fu_969_p00;

assign grp_fu_969_p00 = add_ln14_10_reg_1973;

assign grp_fu_969_p1 = sext_ln14_reg_1698;

assign grp_fu_982_p0 = grp_fu_982_p00;

assign grp_fu_982_p00 = add_ln14_8_reg_1978;

assign grp_fu_982_p1 = sext_ln14_reg_1698;

assign icmp126_fu_545_p2 = ((tmp_1_fu_535_p4 != 30'd0) ? 1'b1 : 1'b0);

assign icmp_fu_515_p2 = ((tmp_fu_505_p4 != 30'd0) ? 1'b1 : 1'b0);

assign icmp_ln14_fu_692_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_421_p4 == bound_reg_1764) ? 1'b1 : 1'b0);

assign icmp_ln16_fu_697_p2 = ((ap_phi_mux_x_phi_fu_456_p4 < add_ln14_reg_1673) ? 1'b1 : 1'b0);

assign icmp_ln21_fu_1129_p2 = ((count_pre_2_fu_1123_p2 < 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln28_fu_1621_p2 = ((count_1_fu_1615_p2 > 5'd11) ? 1'b1 : 1'b0);

assign icmp_ln886_10_fu_1473_p2 = (($signed(sext_ln886_11_fu_1469_p1) > $signed(threshold_read_reg_1641)) ? 1'b1 : 1'b0);

assign icmp_ln886_11_fu_1506_p2 = (($signed(sext_ln886_12_fu_1502_p1) > $signed(threshold_read_reg_1641)) ? 1'b1 : 1'b0);

assign icmp_ln886_12_fu_1523_p2 = (($signed(sext_ln886_13_fu_1519_p1) > $signed(threshold_read_reg_1641)) ? 1'b1 : 1'b0);

assign icmp_ln886_13_fu_1540_p2 = (($signed(sext_ln886_14_fu_1536_p1) > $signed(threshold_read_reg_1641)) ? 1'b1 : 1'b0);

assign icmp_ln886_14_fu_1566_p2 = (($signed(sext_ln886_15_fu_1562_p1) > $signed(threshold_read_reg_1641)) ? 1'b1 : 1'b0);

assign icmp_ln886_1_fu_1065_p2 = (($signed(sext_ln886_2_fu_1061_p1) > $signed(threshold_read_reg_1641)) ? 1'b1 : 1'b0);

assign icmp_ln886_2_fu_1082_p2 = (($signed(sext_ln886_3_fu_1078_p1) > $signed(threshold_read_reg_1641)) ? 1'b1 : 1'b0);

assign icmp_ln886_4_fu_1310_p2 = (($signed(sext_ln886_5_fu_1306_p1) > $signed(threshold_read_reg_1641)) ? 1'b1 : 1'b0);

assign icmp_ln886_5_fu_1333_p2 = (($signed(sext_ln886_6_fu_1329_p1) > $signed(threshold_read_reg_1641)) ? 1'b1 : 1'b0);

assign icmp_ln886_6_fu_1365_p2 = (($signed(sext_ln886_7_fu_1361_p1) > $signed(threshold_read_reg_1641)) ? 1'b1 : 1'b0);

assign icmp_ln886_7_fu_1388_p2 = (($signed(sext_ln886_8_fu_1384_p1) > $signed(threshold_read_reg_1641)) ? 1'b1 : 1'b0);

assign icmp_ln886_8_fu_1421_p2 = (($signed(sext_ln886_9_fu_1417_p1) > $signed(threshold_read_reg_1641)) ? 1'b1 : 1'b0);

assign icmp_ln886_9_fu_1450_p2 = (($signed(sext_ln886_10_fu_1446_p1) > $signed(threshold_read_reg_1641)) ? 1'b1 : 1'b0);

assign icmp_ln886_fu_1048_p2 = (($signed(sext_ln886_1_fu_1044_p1) > $signed(threshold_read_reg_1641)) ? 1'b1 : 1'b0);

assign indvars_iv_next578_fu_899_p2 = (y_reg_440 + 32'd1);

assign indvars_iv_next578_mid1_fu_913_p2 = (y_reg_440 + 32'd2);

assign ret_10_fu_1441_p2 = (zext_ln1347_10_fu_1438_p1 - zext_ln1347_reg_2054_pp0_iter1_reg);

assign ret_11_fu_1464_p2 = (zext_ln1347_11_fu_1461_p1 - zext_ln1347_reg_2054_pp0_iter1_reg);

assign ret_12_fu_1497_p2 = (zext_ln1347_12_fu_1494_p1 - zext_ln1347_reg_2054_pp0_iter1_reg);

assign ret_13_fu_1514_p2 = (zext_ln1347_13_fu_1511_p1 - zext_ln1347_reg_2054_pp0_iter1_reg);

assign ret_14_fu_1531_p2 = (zext_ln1347_14_fu_1528_p1 - zext_ln1347_reg_2054_pp0_iter1_reg);

assign ret_15_fu_1557_p2 = (zext_ln1347_15_fu_1554_p1 - zext_ln1347_reg_2054_pp0_iter1_reg);

assign ret_1_fu_1039_p2 = (zext_ln1347_1_fu_1036_p1 - zext_ln1347_reg_2054);

assign ret_2_fu_1056_p2 = (zext_ln1347_2_fu_1053_p1 - zext_ln1347_reg_2054);

assign ret_3_fu_1073_p2 = (zext_ln1347_3_fu_1070_p1 - zext_ln1347_reg_2054);

assign ret_4_fu_1284_p2 = (zext_ln1347_4_fu_1281_p1 - zext_ln1347_reg_2054);

assign ret_5_fu_1301_p2 = (zext_ln1347_5_fu_1298_p1 - zext_ln1347_reg_2054);

assign ret_6_fu_1324_p2 = (zext_ln1347_6_fu_1321_p1 - zext_ln1347_reg_2054);

assign ret_7_fu_1356_p2 = (zext_ln1347_7_fu_1353_p1 - zext_ln1347_reg_2054);

assign ret_8_fu_1379_p2 = (zext_ln1347_8_fu_1376_p1 - zext_ln1347_reg_2054);

assign ret_9_fu_1412_p2 = (zext_ln1347_9_fu_1409_p1 - zext_ln1347_reg_2054);

assign ret_fu_1021_p2 = (zext_ln215_fu_1015_p1 - zext_ln1347_fu_1018_p1);

assign select_ln14_10_fu_933_p3 = ((icmp_ln16_reg_1778[0:0] == 1'b1) ? empty_19_reg_1910 : empty_reg_1806);

assign select_ln14_11_fu_987_p3 = ((icmp_ln16_reg_1778[0:0] == 1'b1) ? empty_20_reg_1957 : p_mid195_reg_1983);

assign select_ln14_1_fu_557_p3 = ((icmp126_fu_545_p2[0:0] == 1'b1) ? add_ln14_4_fu_551_p2 : 32'd0);

assign select_ln14_2_fu_746_p3 = ((icmp_ln16_reg_1778[0:0] == 1'b1) ? ap_phi_mux_indvar595_phi_fu_467_p4 : 32'd0);

assign select_ln14_3_fu_702_p3 = ((icmp_ln16_fu_697_p2[0:0] == 1'b1) ? ap_phi_mux_x_phi_fu_456_p4 : 32'd3);

assign select_ln14_4_fu_716_p3 = ((icmp_ln16_fu_697_p2[0:0] == 1'b1) ? ap_phi_mux_indvar_phi_fu_433_p4 : add_ln14_11_fu_710_p2);

assign select_ln14_5_fu_724_p3 = ((icmp_ln16_fu_697_p2[0:0] == 1'b1) ? 32'd3 : 32'd4);

assign select_ln14_6_fu_974_p3 = ((icmp_ln16_reg_1778[0:0] == 1'b1) ? empty_reg_1806 : empty_20_reg_1957);

assign select_ln14_7_fu_761_p3 = ((icmp_ln16_reg_1778[0:0] == 1'b1) ? 32'd4294967293 : 32'd4294967294);

assign select_ln14_8_fu_927_p3 = ((icmp_ln16_reg_1778[0:0] == 1'b1) ? y_reg_440 : indvars_iv_next578_reg_1915);

assign select_ln14_9_fu_871_p3 = ((icmp_ln16_reg_1778[0:0] == 1'b1) ? 32'd4294967294 : 32'd4294967295);

assign select_ln14_fu_527_p3 = ((icmp_fu_515_p2[0:0] == 1'b1) ? add_ln14_3_fu_521_p2 : 32'd0);

assign sext_ln14_1_fu_580_p1 = cols_read_reg_1627;

assign sext_ln14_2_fu_590_p1 = $signed(shl_ln_fu_583_p3);

assign sext_ln14_3_fu_600_p1 = $signed(sub_ln14_fu_594_p2);

assign sext_ln14_4_fu_611_p1 = $signed(shl_ln14_1_fu_604_p3);

assign sext_ln14_5_fu_622_p1 = $signed(shl_ln14_2_fu_615_p3);

assign sext_ln14_6_fu_632_p1 = $signed(sub_ln14_1_fu_626_p2);

assign sext_ln14_fu_577_p1 = cols_read_reg_1627;

assign sext_ln886_10_fu_1446_p1 = $signed(ret_10_fu_1441_p2);

assign sext_ln886_11_fu_1469_p1 = $signed(ret_11_fu_1464_p2);

assign sext_ln886_12_fu_1502_p1 = $signed(ret_12_fu_1497_p2);

assign sext_ln886_13_fu_1519_p1 = $signed(ret_13_fu_1514_p2);

assign sext_ln886_14_fu_1536_p1 = $signed(ret_14_fu_1531_p2);

assign sext_ln886_15_fu_1562_p1 = $signed(ret_15_fu_1557_p2);

assign sext_ln886_1_fu_1044_p1 = $signed(ret_1_fu_1039_p2);

assign sext_ln886_2_fu_1061_p1 = $signed(ret_2_fu_1056_p2);

assign sext_ln886_3_fu_1078_p1 = $signed(ret_3_fu_1073_p2);

assign sext_ln886_4_fu_1289_p1 = $signed(ret_4_fu_1284_p2);

assign sext_ln886_5_fu_1306_p1 = $signed(ret_5_fu_1301_p2);

assign sext_ln886_6_fu_1329_p1 = $signed(ret_6_fu_1324_p2);

assign sext_ln886_7_fu_1361_p1 = $signed(ret_7_fu_1356_p2);

assign sext_ln886_8_fu_1384_p1 = $signed(ret_8_fu_1379_p2);

assign sext_ln886_9_fu_1417_p1 = $signed(ret_9_fu_1412_p2);

assign sext_ln886_fu_1027_p1 = $signed(ret_fu_1021_p2);

assign shl_ln14_1_fu_604_p3 = {{cols_read_reg_1627}, {3'd0}};

assign shl_ln14_2_fu_615_p3 = {{cols_read_reg_1627}, {1'd0}};

assign shl_ln_fu_583_p3 = {{cols_read_reg_1627}, {2'd0}};

assign sub_ln14_1_fu_626_p2 = ($signed(sext_ln14_4_fu_611_p1) - $signed(sext_ln14_5_fu_622_p1));

assign sub_ln14_fu_594_p2 = ($signed(sext_ln14_2_fu_590_p1) - $signed(sext_ln14_1_fu_580_p1));

assign tmp_1_fu_535_p4 = {{add_ln14_fu_493_p2[31:2]}};

assign tmp_fu_505_p4 = {{add_ln14_1_fu_499_p2[31:2]}};

assign zext_ln1347_10_fu_1438_p1 = point_V_10_reg_2259;

assign zext_ln1347_11_fu_1461_p1 = point_V_11_reg_2269;

assign zext_ln1347_12_fu_1494_p1 = point_V_12_reg_2274;

assign zext_ln1347_13_fu_1511_p1 = point_V_13_reg_2289;

assign zext_ln1347_14_fu_1528_p1 = point_V_14_reg_2299;

assign zext_ln1347_15_fu_1554_p1 = point_V_15_reg_2309;

assign zext_ln1347_1_fu_1036_p1 = point_V_reg_2078;

assign zext_ln1347_2_fu_1053_p1 = point_V_2_reg_2088;

assign zext_ln1347_3_fu_1070_p1 = point_V_3_reg_2098;

assign zext_ln1347_4_fu_1281_p1 = point_V_4_reg_2189;

assign zext_ln1347_5_fu_1298_p1 = point_V_5_reg_2199;

assign zext_ln1347_6_fu_1321_p1 = point_V_6_reg_2209;

assign zext_ln1347_7_fu_1353_p1 = point_V_7_reg_2219;

assign zext_ln1347_8_fu_1376_p1 = point_V_8_reg_2234;

assign zext_ln1347_9_fu_1409_p1 = point_V_9_reg_2239;

assign zext_ln1347_fu_1018_p1 = center_V_reg_2038;

assign zext_ln14_4_fu_944_p1 = select_ln14_8_reg_1936;

assign zext_ln16_1_fu_798_p1 = select_ln14_2_reg_1817;

assign zext_ln16_2_fu_774_p1 = select_ln14_2_fu_746_p3;

assign zext_ln16_fu_992_p1 = select_ln14_3_reg_1789;

assign zext_ln215_fu_1015_p1 = point_V_16_reg_2049;

assign zext_ln27_1_fu_1344_p1 = add_ln27_fu_1338_p2;

assign zext_ln27_2_fu_1426_p1 = add_ln27_1_reg_2224;

assign zext_ln27_3_fu_1429_p1 = add_ln27_3_reg_2244;

assign zext_ln27_4_fu_1587_p1 = add_ln27_4_reg_2254;

assign zext_ln27_5_fu_1590_p1 = add_ln27_6_reg_2279;

assign zext_ln27_6_fu_1593_p1 = add_ln27_7_reg_2314;

assign zext_ln27_7_fu_1596_p1 = add_ln27_8_reg_2319;

assign zext_ln27_8_fu_1611_p1 = add_ln27_10_fu_1605_p2;

assign zext_ln27_fu_1571_p1 = icmp_ln886_14_fu_1566_p2;

assign zext_ln40_fu_1091_p1 = count_pre_reg_2073;

assign zext_ln41_fu_833_p1 = add_ln41_2_reg_1840;

assign zext_ln42_fu_1094_p1 = icmp_ln886_reg_2083;

assign zext_ln43_1_fu_1100_p1 = icmp_ln886_2_reg_2103;

assign zext_ln43_2_fu_1109_p1 = add_ln43_2_fu_1103_p2;

assign zext_ln43_3_fu_1119_p1 = add_ln43_3_fu_1113_p2;

assign zext_ln43_fu_1097_p1 = icmp_ln886_1_reg_2093;

assign zext_ln52_fu_1315_p1 = count_for_reg_2194;

assign zext_ln54_fu_1318_p1 = icmp_ln886_4_reg_2204;

assign zext_ln55_fu_1370_p1 = icmp_ln886_5_reg_2214;

assign zext_ln56_fu_1373_p1 = icmp_ln886_6_reg_2229;

assign zext_ln57_fu_1393_p1 = icmp_ln886_7_fu_1388_p2;

assign zext_ln58_fu_1455_p1 = icmp_ln886_8_reg_2249;

assign zext_ln59_fu_1458_p1 = icmp_ln886_9_reg_2264;

assign zext_ln60_fu_1478_p1 = icmp_ln886_10_fu_1473_p2;

assign zext_ln61_fu_1545_p1 = icmp_ln886_11_reg_2284;

assign zext_ln62_fu_1548_p1 = icmp_ln886_12_reg_2294;

assign zext_ln63_fu_1551_p1 = icmp_ln886_13_reg_2304;

always @ (posedge ap_clk) begin
    zext_ln16_1_reg_1860[63:32] <= 32'b00000000000000000000000000000000;
    zext_ln14_4_reg_1963[32] <= 1'b0;
    zext_ln16_reg_2008[63:32] <= 32'b00000000000000000000000000000000;
    zext_ln1347_reg_2054[8] <= 1'b0;
    zext_ln1347_reg_2054_pp0_iter1_reg[8] <= 1'b0;
end

endmodule //fast_accel
