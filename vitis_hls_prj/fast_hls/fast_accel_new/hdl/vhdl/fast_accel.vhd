-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fast_accel is
generic (
    C_M_AXI_GMEM_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CTRL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CTRL_DATA_WIDTH : INTEGER := 32;
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BUSER_WIDTH-1 downto 0);
    s_axi_CTRL_AWVALID : IN STD_LOGIC;
    s_axi_CTRL_AWREADY : OUT STD_LOGIC;
    s_axi_CTRL_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_WVALID : IN STD_LOGIC;
    s_axi_CTRL_WREADY : OUT STD_LOGIC;
    s_axi_CTRL_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH/8-1 downto 0);
    s_axi_CTRL_ARVALID : IN STD_LOGIC;
    s_axi_CTRL_ARREADY : OUT STD_LOGIC;
    s_axi_CTRL_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_RVALID : OUT STD_LOGIC;
    s_axi_CTRL_RREADY : IN STD_LOGIC;
    s_axi_CTRL_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CTRL_BVALID : OUT STD_LOGIC;
    s_axi_CTRL_BREADY : IN STD_LOGIC;
    s_axi_CTRL_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC;
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of fast_accel is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "fast_accel_fast_accel,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=6845,HLS_SYN_LUT=6452,HLS_VERSION=2020_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000100";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000001000";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000010000";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000100000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000001000000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000010000000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000100000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000001000000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000010000000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000100000000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (23 downto 0) := "000000000001000000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (23 downto 0) := "000000000010000000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (23 downto 0) := "000000000100000000000000";
    constant ap_ST_fsm_pp0_stage12 : STD_LOGIC_VECTOR (23 downto 0) := "000000001000000000000000";
    constant ap_ST_fsm_pp0_stage13 : STD_LOGIC_VECTOR (23 downto 0) := "000000010000000000000000";
    constant ap_ST_fsm_pp0_stage14 : STD_LOGIC_VECTOR (23 downto 0) := "000000100000000000000000";
    constant ap_ST_fsm_pp0_stage15 : STD_LOGIC_VECTOR (23 downto 0) := "000001000000000000000000";
    constant ap_ST_fsm_pp0_stage16 : STD_LOGIC_VECTOR (23 downto 0) := "000010000000000000000000";
    constant ap_ST_fsm_pp0_stage17 : STD_LOGIC_VECTOR (23 downto 0) := "000100000000000000000000";
    constant ap_ST_fsm_pp0_stage18 : STD_LOGIC_VECTOR (23 downto 0) := "001000000000000000000000";
    constant ap_ST_fsm_pp0_stage19 : STD_LOGIC_VECTOR (23 downto 0) := "010000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (23 downto 0) := "100000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv32_FFFFFFFD : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111101";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv30_0 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000000";
    constant ap_const_lv32_FFFFFFFA : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv64_FFFFFFFFFFFFFFFE : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111110";
    constant ap_const_lv64_FFFFFFFFFFFFFFFD : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111101";
    constant ap_const_lv32_FFFFFFFE : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111110";
    constant ap_const_lv33_6 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000110";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv33_2 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000010";
    constant ap_const_lv33_3 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000011";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv5_B : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal img_in : STD_LOGIC_VECTOR (63 downto 0);
    signal threshold : STD_LOGIC_VECTOR (31 downto 0);
    signal img_out : STD_LOGIC_VECTOR (63 downto 0);
    signal rows : STD_LOGIC_VECTOR (31 downto 0);
    signal cols : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage18 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage18 : BOOLEAN;
    signal icmp_ln14_reg_1774 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln21_reg_2113 : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_blk_n_W : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage19 : signal is "none";
    signal ap_block_pp0_stage19 : BOOLEAN;
    signal gmem_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal gmem_blk_n_AR : STD_LOGIC;
    signal gmem_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_pp0_stage9 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_block_pp0_stage10 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage16 : signal is "none";
    signal ap_block_pp0_stage16 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage17 : signal is "none";
    signal ap_block_pp0_stage17 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_block_pp0_stage11 : BOOLEAN;
    signal icmp_ln21_reg_2113_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage12 : signal is "none";
    signal ap_block_pp0_stage12 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage13 : signal is "none";
    signal ap_block_pp0_stage13 : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_CS_fsm_pp0_stage14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage14 : signal is "none";
    signal ap_block_pp0_stage14 : BOOLEAN;
    signal icmp_ln28_reg_2324 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage15 : signal is "none";
    signal ap_block_pp0_stage15 : BOOLEAN;
    signal gmem_AWVALID : STD_LOGIC;
    signal gmem_AWREADY : STD_LOGIC;
    signal gmem_WVALID : STD_LOGIC;
    signal gmem_WREADY : STD_LOGIC;
    signal gmem_WDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal gmem_ARVALID : STD_LOGIC;
    signal gmem_ARREADY : STD_LOGIC;
    signal gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_RVALID : STD_LOGIC;
    signal gmem_RREADY : STD_LOGIC;
    signal gmem_RDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal gmem_RLAST : STD_LOGIC;
    signal gmem_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_BVALID : STD_LOGIC;
    signal gmem_BREADY : STD_LOGIC;
    signal gmem_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_reg_417 : STD_LOGIC_VECTOR (63 downto 0);
    signal indvar_reg_429 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_reg_440 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_reg_452 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar595_reg_463 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_484 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state21_pp0_stage17_iter0 : BOOLEAN;
    signal ap_block_state41_pp0_stage17_iter1 : BOOLEAN;
    signal ap_block_pp0_stage17_11001 : BOOLEAN;
    signal icmp_ln21_fu_1129_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cols_read_reg_1627 : STD_LOGIC_VECTOR (31 downto 0);
    signal img_out_read_reg_1636 : STD_LOGIC_VECTOR (63 downto 0);
    signal threshold_read_reg_1641 : STD_LOGIC_VECTOR (31 downto 0);
    signal img_in_read_reg_1661 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln14_fu_493_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln14_reg_1673 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln14_fu_527_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln14_reg_1678 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln14_1_fu_557_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln14_1_reg_1683 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal sext_ln14_fu_577_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln14_reg_1698 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal add_ln14_2_fu_636_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln14_2_reg_1712 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln52_fu_641_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln52_reg_1719 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln53_fu_646_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln53_reg_1725 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln58_fu_651_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln58_reg_1731 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln59_fu_656_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln59_reg_1737 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln60_fu_661_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln60_reg_1743 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln39_2_fu_666_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln39_2_reg_1749 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln41_1_fu_672_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln41_1_reg_1754 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln42_2_fu_677_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln42_2_reg_1759 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_571_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal bound_reg_1764 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state4_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state24_io : BOOLEAN;
    signal ap_block_state44_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln14_fu_692_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln14_reg_1774_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln16_fu_697_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln16_reg_1778 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln14_3_fu_702_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln14_3_reg_1789 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln14_4_fu_716_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln14_4_reg_1795 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln14_6_fu_732_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln14_6_reg_1801 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_687_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_reg_1806 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state5_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state25_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state25_io : BOOLEAN;
    signal ap_block_state45_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal select_ln14_2_fu_746_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln14_2_reg_1817 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state6_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state26_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state26_io : BOOLEAN;
    signal ap_block_state46_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal grp_fu_741_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln14_reg_1823 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln14_7_fu_768_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln14_7_reg_1835 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln41_2_fu_778_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln41_2_reg_1840 : STD_LOGIC_VECTOR (32 downto 0);
    signal empty_18_fu_784_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_18_reg_1845 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state7_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state27_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state27_io : BOOLEAN;
    signal ap_block_state47_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal grp_fu_756_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln14_1_reg_1850 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln16_1_fu_798_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln16_1_reg_1860 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_reg_1865 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_1_reg_1871 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_2_reg_1877 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_3_reg_1883 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state8_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state8_io : BOOLEAN;
    signal ap_block_state28_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_state48_pp0_stage4_iter2 : BOOLEAN;
    signal ap_predicate_op491_write_state48 : BOOLEAN;
    signal ap_block_state48_io : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal grp_fu_793_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln14_2_reg_1894 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln14_9_fu_878_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln14_9_reg_1899 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_4_reg_1904 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_866_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_19_reg_1910 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state9_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state9_io : BOOLEAN;
    signal ap_block_state29_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_state49_pp0_stage5_iter2 : BOOLEAN;
    signal ap_predicate_op493_write_state49 : BOOLEAN;
    signal ap_block_state49_io : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal indvars_iv_next578_fu_899_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvars_iv_next578_reg_1915 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvars_iv_next578_mid1_fu_913_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvars_iv_next578_mid1_reg_1926 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state10_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_state10_io : BOOLEAN;
    signal ap_block_state30_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_state50_pp0_stage6_iter2 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal select_ln14_8_fu_927_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln14_8_reg_1936 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_908_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln14_4_reg_1942 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln14_10_fu_933_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln14_10_reg_1947 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln14_5_fu_938_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln14_5_reg_1952 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state11_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_state11_io : BOOLEAN;
    signal ap_block_state31_pp0_stage7_iter1 : BOOLEAN;
    signal ap_block_state51_pp0_stage7_iter2 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal grp_fu_922_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_20_reg_1957 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_4_fu_944_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal zext_ln14_4_reg_1963 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln14_10_fu_955_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln14_10_reg_1973 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln14_8_fu_961_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln14_8_reg_1978 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_block_state12_pp0_stage8_iter0 : BOOLEAN;
    signal ap_block_state12_io : BOOLEAN;
    signal ap_block_state32_pp0_stage8_iter1 : BOOLEAN;
    signal ap_block_state52_pp0_stage8_iter2 : BOOLEAN;
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal grp_fu_950_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_mid195_reg_1983 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state13_pp0_stage9_iter0 : BOOLEAN;
    signal ap_block_state33_pp0_stage9_iter1 : BOOLEAN;
    signal ap_block_state33_io : BOOLEAN;
    signal ap_predicate_op500_writeresp_state53 : BOOLEAN;
    signal ap_block_state53_pp0_stage9_iter2 : BOOLEAN;
    signal ap_block_pp0_stage9_11001 : BOOLEAN;
    signal select_ln14_11_fu_987_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln14_11_reg_1998 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_969_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln14_5_reg_2003 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln16_fu_992_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln16_reg_2008 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln39_fu_995_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln39_reg_2018 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln16_fu_1001_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln16_reg_2023 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln16_1_fu_1006_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln16_1_reg_2028 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_982_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln14_3_reg_2033 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state14_pp0_stage10_iter0 : BOOLEAN;
    signal ap_block_state34_pp0_stage10_iter1 : BOOLEAN;
    signal ap_block_state34_io : BOOLEAN;
    signal ap_predicate_op503_writeresp_state54 : BOOLEAN;
    signal ap_block_state54_pp0_stage10_iter2 : BOOLEAN;
    signal ap_block_pp0_stage10_11001 : BOOLEAN;
    signal center_V_reg_2038 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state15_pp0_stage11_iter0 : BOOLEAN;
    signal ap_block_state35_pp0_stage11_iter1 : BOOLEAN;
    signal ap_block_state35_io : BOOLEAN;
    signal ap_block_pp0_stage11_11001 : BOOLEAN;
    signal add_ln42_fu_1011_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln42_reg_2043 : STD_LOGIC_VECTOR (63 downto 0);
    signal point_V_16_reg_2049 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state16_pp0_stage12_iter0 : BOOLEAN;
    signal ap_block_state36_pp0_stage12_iter1 : BOOLEAN;
    signal ap_block_state36_io : BOOLEAN;
    signal ap_block_pp0_stage12_11001 : BOOLEAN;
    signal zext_ln1347_fu_1018_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1347_reg_2054 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_state17_pp0_stage13_iter0 : BOOLEAN;
    signal ap_block_state37_pp0_stage13_iter1 : BOOLEAN;
    signal ap_block_state37_io : BOOLEAN;
    signal ap_block_pp0_stage13_11001 : BOOLEAN;
    signal zext_ln1347_reg_2054_pp0_iter1_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal count_pre_fu_1031_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal count_pre_reg_2073 : STD_LOGIC_VECTOR (0 downto 0);
    signal point_V_reg_2078 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln886_fu_1048_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_reg_2083 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state18_pp0_stage14_iter0 : BOOLEAN;
    signal ap_block_state38_pp0_stage14_iter1 : BOOLEAN;
    signal ap_block_state38_io : BOOLEAN;
    signal ap_block_pp0_stage14_11001 : BOOLEAN;
    signal point_V_2_reg_2088 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln886_1_fu_1065_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_1_reg_2093 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state19_pp0_stage15_iter0 : BOOLEAN;
    signal ap_block_state39_pp0_stage15_iter1 : BOOLEAN;
    signal ap_block_pp0_stage15_11001 : BOOLEAN;
    signal point_V_3_reg_2098 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln886_2_fu_1082_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_2_reg_2103 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state20_pp0_stage16_iter0 : BOOLEAN;
    signal ap_block_state40_pp0_stage16_iter1 : BOOLEAN;
    signal ap_block_pp0_stage16_11001 : BOOLEAN;
    signal count_pre_2_fu_1123_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal count_pre_2_reg_2108 : STD_LOGIC_VECTOR (2 downto 0);
    signal gmem_addr_6_reg_2117 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_7_reg_2123 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_8_reg_2129 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_9_reg_2135 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_10_reg_2141 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_11_reg_2147 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_12_reg_2153 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_13_reg_2159 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_14_reg_2165 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_15_reg_2171 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_16_reg_2177 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_17_reg_2183 : STD_LOGIC_VECTOR (63 downto 0);
    signal point_V_4_reg_2189 : STD_LOGIC_VECTOR (7 downto 0);
    signal count_for_fu_1293_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal count_for_reg_2194 : STD_LOGIC_VECTOR (0 downto 0);
    signal point_V_5_reg_2199 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln886_4_fu_1310_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_4_reg_2204 : STD_LOGIC_VECTOR (0 downto 0);
    signal point_V_6_reg_2209 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln886_5_fu_1333_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_5_reg_2214 : STD_LOGIC_VECTOR (0 downto 0);
    signal point_V_7_reg_2219 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln27_1_fu_1348_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln27_1_reg_2224 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln886_6_fu_1365_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_6_reg_2229 : STD_LOGIC_VECTOR (0 downto 0);
    signal point_V_8_reg_2234 : STD_LOGIC_VECTOR (7 downto 0);
    signal point_V_9_reg_2239 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln27_3_fu_1403_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln27_3_reg_2244 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln886_8_fu_1421_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_8_reg_2249 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln27_4_fu_1432_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln27_4_reg_2254 : STD_LOGIC_VECTOR (3 downto 0);
    signal point_V_10_reg_2259 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln886_9_fu_1450_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_9_reg_2264 : STD_LOGIC_VECTOR (0 downto 0);
    signal point_V_11_reg_2269 : STD_LOGIC_VECTOR (7 downto 0);
    signal point_V_12_reg_2274 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state22_pp0_stage18_iter0 : BOOLEAN;
    signal ap_predicate_op304_readreq_state22 : BOOLEAN;
    signal ap_predicate_op305_writereq_state22 : BOOLEAN;
    signal ap_predicate_op306_writereq_state22 : BOOLEAN;
    signal ap_block_state22_io : BOOLEAN;
    signal ap_block_state42_pp0_stage18_iter1 : BOOLEAN;
    signal ap_block_pp0_stage18_11001 : BOOLEAN;
    signal add_ln27_6_fu_1488_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln27_6_reg_2279 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln886_11_fu_1506_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_11_reg_2284 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state23_pp0_stage19_iter0 : BOOLEAN;
    signal ap_predicate_op308_readreq_state23 : BOOLEAN;
    signal ap_predicate_op309_write_state23 : BOOLEAN;
    signal ap_block_state23_io : BOOLEAN;
    signal ap_block_state43_pp0_stage19_iter1 : BOOLEAN;
    signal ap_block_pp0_stage19_11001 : BOOLEAN;
    signal point_V_13_reg_2289 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln886_12_fu_1523_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_12_reg_2294 : STD_LOGIC_VECTOR (0 downto 0);
    signal point_V_14_reg_2299 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln886_13_fu_1540_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_13_reg_2304 : STD_LOGIC_VECTOR (0 downto 0);
    signal point_V_15_reg_2309 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln27_7_fu_1575_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln27_7_reg_2314 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln27_8_fu_1581_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln27_8_reg_2319 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln28_fu_1621_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state11 : STD_LOGIC;
    signal ap_block_pp0_stage19_subdone : BOOLEAN;
    signal ap_block_pp0_stage10_subdone : BOOLEAN;
    signal ap_phi_mux_indvar_flatten_phi_fu_421_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_indvar_phi_fu_433_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_y_phi_fu_444_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_x_phi_fu_456_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_indvar595_phi_fu_467_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_474_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln39_1_fu_806_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln40_1_fu_822_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln41_fu_841_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln42_1_fu_852_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln43_fu_888_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln52_1_fu_1135_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln53_2_fu_1150_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_1_fu_1165_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln55_1_fu_1180_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln56_1_fu_1195_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln57_fu_1206_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln58_1_fu_1216_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln59_1_fu_1226_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln60_1_fu_1237_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln61_fu_1248_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln62_fu_1259_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln63_fu_1270_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage19_01001 : BOOLEAN;
    signal ap_block_pp0_stage4_01001 : BOOLEAN;
    signal ap_block_pp0_stage5_01001 : BOOLEAN;
    signal add_ln14_fu_493_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln14_1_fu_499_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_505_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal icmp_fu_515_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln14_3_fu_521_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_535_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln14_4_fu_551_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp126_fu_545_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln14_4_fu_551_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_571_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_571_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln_fu_583_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal sext_ln14_2_fu_590_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal sext_ln14_1_fu_580_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal sub_ln14_fu_594_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal shl_ln14_1_fu_604_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal shl_ln14_2_fu_615_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln14_4_fu_611_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal sext_ln14_5_fu_622_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal sub_ln14_1_fu_626_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal sext_ln14_3_fu_600_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln14_6_fu_632_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_687_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_687_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln14_11_fu_710_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln14_5_fu_724_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_741_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_741_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_756_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_756_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln14_7_fu_761_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln16_2_fu_774_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_fu_793_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_793_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln39_3_fu_801_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln40_2_fu_817_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln41_fu_833_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln41_3_fu_836_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_866_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_866_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln14_9_fu_871_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln43_1_fu_884_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_908_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_908_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_922_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_922_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_950_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_950_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_969_p0 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_fu_969_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_982_p0 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_fu_982_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln14_6_fu_974_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln215_fu_1015_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_fu_1021_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln886_fu_1027_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1347_1_fu_1036_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_1_fu_1039_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln886_1_fu_1044_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1347_2_fu_1053_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_2_fu_1056_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln886_2_fu_1061_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1347_3_fu_1070_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_3_fu_1073_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln886_3_fu_1078_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln40_fu_1091_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln43_fu_1097_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln43_2_fu_1103_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln42_fu_1094_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln43_1_fu_1100_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln43_3_fu_1113_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln43_3_fu_1119_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln43_2_fu_1109_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln40_fu_1087_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln53_1_fu_1146_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_fu_1161_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln55_fu_1176_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln56_fu_1191_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1347_4_fu_1281_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_4_fu_1284_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln886_4_fu_1289_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1347_5_fu_1298_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_5_fu_1301_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln886_5_fu_1306_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1347_6_fu_1321_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_6_fu_1324_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln886_6_fu_1329_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln52_fu_1315_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln54_fu_1318_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln27_fu_1338_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln27_1_fu_1344_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln1347_7_fu_1353_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_7_fu_1356_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln886_7_fu_1361_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1347_8_fu_1376_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_8_fu_1379_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln886_8_fu_1384_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln886_7_fu_1388_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln56_fu_1373_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln57_fu_1393_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln27_2_fu_1397_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln55_fu_1370_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln1347_9_fu_1409_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_9_fu_1412_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln886_9_fu_1417_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln27_3_fu_1429_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln27_2_fu_1426_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln1347_10_fu_1438_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_10_fu_1441_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln886_10_fu_1446_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1347_11_fu_1461_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_11_fu_1464_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln886_11_fu_1469_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln886_10_fu_1473_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln59_fu_1458_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln60_fu_1478_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln27_5_fu_1482_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln58_fu_1455_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln1347_12_fu_1494_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_12_fu_1497_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln886_12_fu_1502_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1347_13_fu_1511_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_13_fu_1514_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln886_13_fu_1519_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1347_14_fu_1528_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_14_fu_1531_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln886_14_fu_1536_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1347_15_fu_1554_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_15_fu_1557_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln886_15_fu_1562_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln886_14_fu_1566_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln61_fu_1545_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln62_fu_1548_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln63_fu_1551_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln27_fu_1571_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln27_7_fu_1596_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln27_6_fu_1593_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln27_9_fu_1599_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln27_5_fu_1590_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln27_10_fu_1605_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln27_8_fu_1611_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln27_4_fu_1587_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal count_1_fu_1615_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_687_ce : STD_LOGIC;
    signal grp_fu_741_ce : STD_LOGIC;
    signal grp_fu_756_ce : STD_LOGIC;
    signal grp_fu_793_ce : STD_LOGIC;
    signal grp_fu_866_ce : STD_LOGIC;
    signal grp_fu_908_ce : STD_LOGIC;
    signal grp_fu_922_ce : STD_LOGIC;
    signal grp_fu_950_ce : STD_LOGIC;
    signal grp_fu_969_ce : STD_LOGIC;
    signal grp_fu_982_ce : STD_LOGIC;
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal ap_block_pp0_stage11_subdone : BOOLEAN;
    signal ap_block_pp0_stage12_subdone : BOOLEAN;
    signal ap_block_pp0_stage13_subdone : BOOLEAN;
    signal ap_block_pp0_stage14_subdone : BOOLEAN;
    signal ap_block_pp0_stage15_subdone : BOOLEAN;
    signal ap_block_pp0_stage16_subdone : BOOLEAN;
    signal ap_block_pp0_stage17_subdone : BOOLEAN;
    signal ap_block_pp0_stage18_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_571_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_571_p10 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_687_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_741_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_756_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_793_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_866_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_908_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_922_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_950_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_969_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_982_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component fast_accel_mul_32ns_32ns_64_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component fast_accel_mul_32ns_32s_64_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component fast_accel_mul_33ns_32s_64_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (32 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component fast_accel_CTRL_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        threshold : OUT STD_LOGIC_VECTOR (31 downto 0);
        rows : OUT STD_LOGIC_VECTOR (31 downto 0);
        cols : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component fast_accel_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        img_in : OUT STD_LOGIC_VECTOR (63 downto 0);
        img_out : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component fast_accel_gmem_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    CTRL_s_axi_U : component fast_accel_CTRL_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CTRL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CTRL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CTRL_AWVALID,
        AWREADY => s_axi_CTRL_AWREADY,
        AWADDR => s_axi_CTRL_AWADDR,
        WVALID => s_axi_CTRL_WVALID,
        WREADY => s_axi_CTRL_WREADY,
        WDATA => s_axi_CTRL_WDATA,
        WSTRB => s_axi_CTRL_WSTRB,
        ARVALID => s_axi_CTRL_ARVALID,
        ARREADY => s_axi_CTRL_ARREADY,
        ARADDR => s_axi_CTRL_ARADDR,
        RVALID => s_axi_CTRL_RVALID,
        RREADY => s_axi_CTRL_RREADY,
        RDATA => s_axi_CTRL_RDATA,
        RRESP => s_axi_CTRL_RRESP,
        BVALID => s_axi_CTRL_BVALID,
        BREADY => s_axi_CTRL_BREADY,
        BRESP => s_axi_CTRL_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        threshold => threshold,
        rows => rows,
        cols => cols,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    control_s_axi_U : component fast_accel_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        img_in => img_in,
        img_out => img_out);

    gmem_m_axi_U : component fast_accel_gmem_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 8,
        USER_AW => 64,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_CACHE_VALUE)
    port map (
        AWVALID => m_axi_gmem_AWVALID,
        AWREADY => m_axi_gmem_AWREADY,
        AWADDR => m_axi_gmem_AWADDR,
        AWID => m_axi_gmem_AWID,
        AWLEN => m_axi_gmem_AWLEN,
        AWSIZE => m_axi_gmem_AWSIZE,
        AWBURST => m_axi_gmem_AWBURST,
        AWLOCK => m_axi_gmem_AWLOCK,
        AWCACHE => m_axi_gmem_AWCACHE,
        AWPROT => m_axi_gmem_AWPROT,
        AWQOS => m_axi_gmem_AWQOS,
        AWREGION => m_axi_gmem_AWREGION,
        AWUSER => m_axi_gmem_AWUSER,
        WVALID => m_axi_gmem_WVALID,
        WREADY => m_axi_gmem_WREADY,
        WDATA => m_axi_gmem_WDATA,
        WSTRB => m_axi_gmem_WSTRB,
        WLAST => m_axi_gmem_WLAST,
        WID => m_axi_gmem_WID,
        WUSER => m_axi_gmem_WUSER,
        ARVALID => m_axi_gmem_ARVALID,
        ARREADY => m_axi_gmem_ARREADY,
        ARADDR => m_axi_gmem_ARADDR,
        ARID => m_axi_gmem_ARID,
        ARLEN => m_axi_gmem_ARLEN,
        ARSIZE => m_axi_gmem_ARSIZE,
        ARBURST => m_axi_gmem_ARBURST,
        ARLOCK => m_axi_gmem_ARLOCK,
        ARCACHE => m_axi_gmem_ARCACHE,
        ARPROT => m_axi_gmem_ARPROT,
        ARQOS => m_axi_gmem_ARQOS,
        ARREGION => m_axi_gmem_ARREGION,
        ARUSER => m_axi_gmem_ARUSER,
        RVALID => m_axi_gmem_RVALID,
        RREADY => m_axi_gmem_RREADY,
        RDATA => m_axi_gmem_RDATA,
        RLAST => m_axi_gmem_RLAST,
        RID => m_axi_gmem_RID,
        RUSER => m_axi_gmem_RUSER,
        RRESP => m_axi_gmem_RRESP,
        BVALID => m_axi_gmem_BVALID,
        BREADY => m_axi_gmem_BREADY,
        BRESP => m_axi_gmem_BRESP,
        BID => m_axi_gmem_BID,
        BUSER => m_axi_gmem_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem_ARVALID,
        I_ARREADY => gmem_ARREADY,
        I_ARADDR => gmem_ARADDR,
        I_ARID => ap_const_lv1_0,
        I_ARLEN => ap_const_lv32_1,
        I_ARSIZE => ap_const_lv3_0,
        I_ARLOCK => ap_const_lv2_0,
        I_ARCACHE => ap_const_lv4_0,
        I_ARQOS => ap_const_lv4_0,
        I_ARPROT => ap_const_lv3_0,
        I_ARUSER => ap_const_lv1_0,
        I_ARBURST => ap_const_lv2_0,
        I_ARREGION => ap_const_lv4_0,
        I_RVALID => gmem_RVALID,
        I_RREADY => gmem_RREADY,
        I_RDATA => gmem_RDATA,
        I_RID => gmem_RID,
        I_RUSER => gmem_RUSER,
        I_RRESP => gmem_RRESP,
        I_RLAST => gmem_RLAST,
        I_AWVALID => gmem_AWVALID,
        I_AWREADY => gmem_AWREADY,
        I_AWADDR => reg_484,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_1,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => gmem_WVALID,
        I_WREADY => gmem_WREADY,
        I_WDATA => gmem_WDATA,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv1_1,
        I_BVALID => gmem_BVALID,
        I_BREADY => gmem_BREADY,
        I_BRESP => gmem_BRESP,
        I_BID => gmem_BID,
        I_BUSER => gmem_BUSER);

    mul_32ns_32ns_64_2_1_U1 : component fast_accel_mul_32ns_32ns_64_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_571_p0,
        din1 => grp_fu_571_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_571_p2);

    mul_32ns_32s_64_2_1_U2 : component fast_accel_mul_32ns_32s_64_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_687_p0,
        din1 => grp_fu_687_p1,
        ce => grp_fu_687_ce,
        dout => grp_fu_687_p2);

    mul_32ns_32s_64_2_1_U3 : component fast_accel_mul_32ns_32s_64_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_741_p0,
        din1 => grp_fu_741_p1,
        ce => grp_fu_741_ce,
        dout => grp_fu_741_p2);

    mul_32ns_32s_64_2_1_U4 : component fast_accel_mul_32ns_32s_64_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_756_p0,
        din1 => grp_fu_756_p1,
        ce => grp_fu_756_ce,
        dout => grp_fu_756_p2);

    mul_32ns_32s_64_2_1_U5 : component fast_accel_mul_32ns_32s_64_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_793_p0,
        din1 => grp_fu_793_p1,
        ce => grp_fu_793_ce,
        dout => grp_fu_793_p2);

    mul_32ns_32s_64_2_1_U6 : component fast_accel_mul_32ns_32s_64_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_866_p0,
        din1 => grp_fu_866_p1,
        ce => grp_fu_866_ce,
        dout => grp_fu_866_p2);

    mul_32ns_32s_64_2_1_U7 : component fast_accel_mul_32ns_32s_64_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_908_p0,
        din1 => grp_fu_908_p1,
        ce => grp_fu_908_ce,
        dout => grp_fu_908_p2);

    mul_32ns_32s_64_2_1_U8 : component fast_accel_mul_32ns_32s_64_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_922_p0,
        din1 => grp_fu_922_p1,
        ce => grp_fu_922_ce,
        dout => grp_fu_922_p2);

    mul_32ns_32s_64_2_1_U9 : component fast_accel_mul_32ns_32s_64_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_950_p0,
        din1 => grp_fu_950_p1,
        ce => grp_fu_950_ce,
        dout => grp_fu_950_p2);

    mul_33ns_32s_64_2_1_U10 : component fast_accel_mul_33ns_32s_64_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 33,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_969_p0,
        din1 => grp_fu_969_p1,
        ce => grp_fu_969_ce,
        dout => grp_fu_969_p2);

    mul_33ns_32s_64_2_1_U11 : component fast_accel_mul_33ns_32s_64_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 33,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_982_p0,
        din1 => grp_fu_982_p1,
        ce => grp_fu_982_ce,
        dout => grp_fu_982_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state11) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_subdone)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_subdone)))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar595_reg_463_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln14_reg_1774_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then 
                indvar595_reg_463 <= add_ln16_1_reg_2028;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                indvar595_reg_463 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_417_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                indvar_flatten_reg_417 <= add_ln14_5_reg_1952;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                indvar_flatten_reg_417 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    indvar_reg_429_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                indvar_reg_429 <= select_ln14_4_reg_1795;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                indvar_reg_429 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    x_reg_452_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                x_reg_452 <= add_ln16_reg_2023;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                x_reg_452 <= ap_const_lv32_3;
            end if; 
        end if;
    end process;

    y_reg_440_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                y_reg_440 <= select_ln14_8_reg_1936;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                y_reg_440 <= ap_const_lv32_3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then
                add_ln14_10_reg_1973 <= add_ln14_10_fu_955_p2;
                    zext_ln14_4_reg_1963(31 downto 0) <= zext_ln14_4_fu_944_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                add_ln14_2_reg_1712 <= add_ln14_2_fu_636_p2;
                add_ln39_2_reg_1749 <= add_ln39_2_fu_666_p2;
                add_ln41_1_reg_1754 <= add_ln41_1_fu_672_p2;
                add_ln42_2_reg_1759 <= add_ln42_2_fu_677_p2;
                add_ln52_reg_1719 <= add_ln52_fu_641_p2;
                add_ln53_reg_1725 <= add_ln53_fu_646_p2;
                add_ln58_reg_1731 <= add_ln58_fu_651_p2;
                add_ln59_reg_1737 <= add_ln59_fu_656_p2;
                add_ln60_reg_1743 <= add_ln60_fu_661_p2;
                bound_reg_1764 <= grp_fu_571_p2;
                sext_ln14_reg_1698 <= sext_ln14_fu_577_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                add_ln14_5_reg_1952 <= add_ln14_5_fu_938_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln14_fu_692_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln14_6_reg_1801 <= add_ln14_6_fu_732_p2;
                icmp_ln16_reg_1778 <= icmp_ln16_fu_697_p2;
                select_ln14_3_reg_1789 <= select_ln14_3_fu_702_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                add_ln14_7_reg_1835 <= add_ln14_7_fu_768_p2;
                add_ln41_2_reg_1840 <= add_ln41_2_fu_778_p2;
                mul_ln14_reg_1823 <= grp_fu_741_p2;
                select_ln14_2_reg_1817 <= select_ln14_2_fu_746_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001))) then
                add_ln14_8_reg_1978 <= add_ln14_8_fu_961_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                add_ln14_9_reg_1899 <= add_ln14_9_fu_878_p2;
                gmem_addr_4_reg_1904 <= add_ln43_fu_888_p2;
                mul_ln14_2_reg_1894 <= grp_fu_793_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                add_ln14_reg_1673 <= add_ln14_fu_493_p2;
                cols_read_reg_1627 <= cols;
                img_in_read_reg_1661 <= img_in;
                img_out_read_reg_1636 <= img_out;
                select_ln14_1_reg_1683 <= select_ln14_1_fu_557_p3;
                select_ln14_reg_1678 <= select_ln14_fu_527_p3;
                threshold_read_reg_1641 <= threshold;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                add_ln16_1_reg_2028 <= add_ln16_1_fu_1006_p2;
                add_ln16_reg_2023 <= add_ln16_fu_1001_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001))) then
                add_ln27_1_reg_2224 <= add_ln27_1_fu_1348_p2;
                icmp_ln886_5_reg_2214 <= icmp_ln886_5_fu_1333_p2;
                point_V_7_reg_2219 <= gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001))) then
                add_ln27_3_reg_2244 <= add_ln27_3_fu_1403_p2;
                point_V_9_reg_2239 <= gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001))) then
                add_ln27_4_reg_2254 <= add_ln27_4_fu_1432_p2;
                icmp_ln886_8_reg_2249 <= icmp_ln886_8_fu_1421_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln21_reg_2113_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001))) then
                add_ln27_6_reg_2279 <= add_ln27_6_fu_1488_p2;
                point_V_12_reg_2274 <= gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln21_reg_2113_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                add_ln27_7_reg_2314 <= add_ln27_7_fu_1575_p2;
                add_ln27_8_reg_2319 <= add_ln27_8_fu_1581_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001))) then
                add_ln39_reg_2018 <= add_ln39_fu_995_p2;
                mul_ln14_5_reg_2003 <= grp_fu_969_p2;
                select_ln14_11_reg_1998 <= select_ln14_11_fu_987_p3;
                    zext_ln16_reg_2008(31 downto 0) <= zext_ln16_fu_992_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001))) then
                add_ln42_reg_2043 <= add_ln42_fu_1011_p2;
                center_V_reg_2038 <= gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001))) then
                count_for_reg_2194 <= count_for_fu_1293_p2;
                point_V_5_reg_2199 <= gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001))) then
                count_pre_2_reg_2108 <= count_pre_2_fu_1123_p2;
                icmp_ln21_reg_2113 <= icmp_ln21_fu_1129_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001))) then
                count_pre_reg_2073 <= count_pre_fu_1031_p2;
                point_V_reg_2078 <= gmem_RDATA;
                    zext_ln1347_reg_2054(7 downto 0) <= zext_ln1347_fu_1018_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln16_reg_1778 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                empty_18_reg_1845 <= empty_18_fu_784_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln16_reg_1778 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001))) then
                empty_19_reg_1910 <= grp_fu_866_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then
                empty_20_reg_1957 <= grp_fu_922_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                empty_reg_1806 <= grp_fu_687_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln21_fu_1129_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001))) then
                gmem_addr_10_reg_2141 <= add_ln56_1_fu_1195_p2;
                gmem_addr_11_reg_2147 <= add_ln57_fu_1206_p2;
                gmem_addr_12_reg_2153 <= add_ln58_1_fu_1216_p2;
                gmem_addr_13_reg_2159 <= add_ln59_1_fu_1226_p2;
                gmem_addr_14_reg_2165 <= add_ln60_1_fu_1237_p2;
                gmem_addr_15_reg_2171 <= add_ln61_fu_1248_p2;
                gmem_addr_16_reg_2177 <= add_ln62_fu_1259_p2;
                gmem_addr_17_reg_2183 <= add_ln63_fu_1270_p2;
                gmem_addr_6_reg_2117 <= add_ln52_1_fu_1135_p2;
                gmem_addr_7_reg_2123 <= add_ln53_2_fu_1150_p2;
                gmem_addr_8_reg_2129 <= add_ln54_1_fu_1165_p2;
                gmem_addr_9_reg_2135 <= add_ln55_1_fu_1180_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                gmem_addr_1_reg_1871 <= add_ln40_1_fu_822_p2;
                gmem_addr_2_reg_1877 <= add_ln41_fu_841_p2;
                gmem_addr_3_reg_1883 <= add_ln42_1_fu_852_p2;
                gmem_addr_reg_1865 <= add_ln39_1_fu_806_p2;
                mul_ln14_1_reg_1850 <= grp_fu_756_p2;
                    zext_ln16_1_reg_1860(31 downto 0) <= zext_ln16_1_fu_798_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln14_reg_1774 <= icmp_ln14_fu_692_p2;
                icmp_ln14_reg_1774_pp0_iter1_reg <= icmp_ln14_reg_1774;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001))) then
                icmp_ln21_reg_2113_pp0_iter1_reg <= icmp_ln21_reg_2113;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln21_reg_2113_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                icmp_ln28_reg_2324 <= icmp_ln28_fu_1621_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln21_reg_2113_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001))) then
                icmp_ln886_11_reg_2284 <= icmp_ln886_11_fu_1506_p2;
                point_V_13_reg_2289 <= gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln21_reg_2113_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln886_12_reg_2294 <= icmp_ln886_12_fu_1523_p2;
                point_V_14_reg_2299 <= gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln21_reg_2113_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                icmp_ln886_13_reg_2304 <= icmp_ln886_13_fu_1540_p2;
                point_V_15_reg_2309 <= gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001))) then
                icmp_ln886_1_reg_2093 <= icmp_ln886_1_fu_1065_p2;
                point_V_3_reg_2098 <= gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001))) then
                icmp_ln886_2_reg_2103 <= icmp_ln886_2_fu_1082_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then
                icmp_ln886_4_reg_2204 <= icmp_ln886_4_fu_1310_p2;
                point_V_6_reg_2209 <= gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001))) then
                icmp_ln886_6_reg_2229 <= icmp_ln886_6_fu_1365_p2;
                point_V_8_reg_2234 <= gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001))) then
                icmp_ln886_9_reg_2264 <= icmp_ln886_9_fu_1450_p2;
                point_V_11_reg_2269 <= gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001))) then
                icmp_ln886_reg_2083 <= icmp_ln886_fu_1048_p2;
                point_V_2_reg_2088 <= gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln16_reg_1778 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001))) then
                indvars_iv_next578_mid1_reg_1926 <= indvars_iv_next578_mid1_fu_913_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001))) then
                indvars_iv_next578_reg_1915 <= indvars_iv_next578_fu_899_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001))) then
                mul_ln14_3_reg_2033 <= grp_fu_982_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001))) then
                mul_ln14_4_reg_1942 <= grp_fu_908_p2;
                select_ln14_10_reg_1947 <= select_ln14_10_fu_933_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln16_reg_1778 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001))) then
                p_mid195_reg_1983 <= grp_fu_950_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001))) then
                point_V_10_reg_2259 <= gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001))) then
                point_V_16_reg_2049 <= gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001))) then
                point_V_4_reg_2189 <= gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln21_fu_1129_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((icmp_ln21_fu_1129_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                reg_484 <= grp_fu_474_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln14_fu_692_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                select_ln14_4_reg_1795 <= select_ln14_4_fu_716_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                select_ln14_8_reg_1936 <= select_ln14_8_fu_927_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001))) then
                    zext_ln1347_reg_2054_pp0_iter1_reg(7 downto 0) <= zext_ln1347_reg_2054(7 downto 0);
            end if;
        end if;
    end process;
    zext_ln16_1_reg_1860(63 downto 32) <= "00000000000000000000000000000000";
    zext_ln14_4_reg_1963(32) <= '0';
    zext_ln16_reg_2008(63 downto 32) <= "00000000000000000000000000000000";
    zext_ln1347_reg_2054(8) <= '0';
    zext_ln1347_reg_2054_pp0_iter1_reg(8) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, icmp_ln14_reg_1774, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage10, ap_enable_reg_pp0_iter2, ap_block_pp0_stage7_subdone, ap_block_pp0_stage19_subdone, ap_block_pp0_stage10_subdone, ap_block_pp0_stage0_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage8_subdone, ap_block_pp0_stage9_subdone, ap_block_pp0_stage11_subdone, ap_block_pp0_stage12_subdone, ap_block_pp0_stage13_subdone, ap_block_pp0_stage14_subdone, ap_block_pp0_stage15_subdone, ap_block_pp0_stage16_subdone, ap_block_pp0_stage17_subdone, ap_block_pp0_stage18_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln14_reg_1774 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln14_reg_1774 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state55;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_pp0_stage10 => 
                if ((not(((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_subdone))) and (ap_const_boolean_0 = ap_block_pp0_stage10_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state55;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                end if;
            when ap_ST_fsm_pp0_stage11 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage11_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                end if;
            when ap_ST_fsm_pp0_stage12 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage12_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                end if;
            when ap_ST_fsm_pp0_stage13 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage13_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                end if;
            when ap_ST_fsm_pp0_stage14 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage14_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                end if;
            when ap_ST_fsm_pp0_stage15 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage15_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                end if;
            when ap_ST_fsm_pp0_stage16 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage16_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                end if;
            when ap_ST_fsm_pp0_stage17 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage17_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage18;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                end if;
            when ap_ST_fsm_pp0_stage18 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage18_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage19;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage18;
                end if;
            when ap_ST_fsm_pp0_stage19 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage19_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage19;
                end if;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln14_10_fu_955_p2 <= std_logic_vector(unsigned(zext_ln14_4_fu_944_p1) + unsigned(ap_const_lv33_2));
    add_ln14_11_fu_710_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_phi_fu_433_p4) + unsigned(ap_const_lv32_1));
    add_ln14_1_fu_499_p2 <= std_logic_vector(unsigned(rows) + unsigned(ap_const_lv32_FFFFFFFD));
    add_ln14_2_fu_636_p2 <= std_logic_vector(unsigned(img_in_read_reg_1661) + unsigned(ap_const_lv64_3));
    add_ln14_3_fu_521_p2 <= std_logic_vector(unsigned(rows) + unsigned(ap_const_lv32_FFFFFFFA));
    add_ln14_4_fu_551_p0 <= cols;
    add_ln14_4_fu_551_p2 <= std_logic_vector(signed(add_ln14_4_fu_551_p0) + signed(ap_const_lv32_FFFFFFFA));
    add_ln14_5_fu_938_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_417) + unsigned(ap_const_lv64_1));
    add_ln14_6_fu_732_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_phi_fu_433_p4) + unsigned(select_ln14_5_fu_724_p3));
    add_ln14_7_fu_768_p2 <= std_logic_vector(unsigned(y_reg_440) + unsigned(select_ln14_7_fu_761_p3));
    add_ln14_8_fu_961_p2 <= std_logic_vector(unsigned(zext_ln14_4_reg_1963) + unsigned(ap_const_lv33_3));
    add_ln14_9_fu_878_p2 <= std_logic_vector(unsigned(y_reg_440) + unsigned(select_ln14_9_fu_871_p3));
    add_ln14_fu_493_p0 <= cols;
    add_ln14_fu_493_p2 <= std_logic_vector(signed(add_ln14_fu_493_p0) + signed(ap_const_lv32_FFFFFFFD));
    add_ln16_1_fu_1006_p2 <= std_logic_vector(unsigned(select_ln14_2_reg_1817) + unsigned(ap_const_lv32_1));
    add_ln16_fu_1001_p2 <= std_logic_vector(unsigned(select_ln14_3_reg_1789) + unsigned(ap_const_lv32_1));
    add_ln27_10_fu_1605_p2 <= std_logic_vector(unsigned(add_ln27_9_fu_1599_p2) + unsigned(zext_ln27_5_fu_1590_p1));
    add_ln27_1_fu_1348_p2 <= std_logic_vector(unsigned(zext_ln27_1_fu_1344_p1) + unsigned(count_pre_2_reg_2108));
    add_ln27_2_fu_1397_p2 <= std_logic_vector(unsigned(zext_ln56_fu_1373_p1) + unsigned(zext_ln57_fu_1393_p1));
    add_ln27_3_fu_1403_p2 <= std_logic_vector(unsigned(add_ln27_2_fu_1397_p2) + unsigned(zext_ln55_fu_1370_p1));
    add_ln27_4_fu_1432_p2 <= std_logic_vector(unsigned(zext_ln27_3_fu_1429_p1) + unsigned(zext_ln27_2_fu_1426_p1));
    add_ln27_5_fu_1482_p2 <= std_logic_vector(unsigned(zext_ln59_fu_1458_p1) + unsigned(zext_ln60_fu_1478_p1));
    add_ln27_6_fu_1488_p2 <= std_logic_vector(unsigned(add_ln27_5_fu_1482_p2) + unsigned(zext_ln58_fu_1455_p1));
    add_ln27_7_fu_1575_p2 <= std_logic_vector(unsigned(zext_ln61_fu_1545_p1) + unsigned(zext_ln62_fu_1548_p1));
    add_ln27_8_fu_1581_p2 <= std_logic_vector(unsigned(zext_ln63_fu_1551_p1) + unsigned(zext_ln27_fu_1571_p1));
    add_ln27_9_fu_1599_p2 <= std_logic_vector(unsigned(zext_ln27_7_fu_1596_p1) + unsigned(zext_ln27_6_fu_1593_p1));
    add_ln27_fu_1338_p2 <= std_logic_vector(unsigned(zext_ln52_fu_1315_p1) + unsigned(zext_ln54_fu_1318_p1));
    add_ln39_1_fu_806_p2 <= std_logic_vector(unsigned(add_ln39_3_fu_801_p2) + unsigned(add_ln39_2_reg_1749));
    add_ln39_2_fu_666_p2 <= std_logic_vector(signed(sext_ln14_3_fu_600_p1) + signed(add_ln14_2_fu_636_p2));
    add_ln39_3_fu_801_p2 <= std_logic_vector(unsigned(mul_ln14_reg_1823) + unsigned(zext_ln16_1_fu_798_p1));
    add_ln39_fu_995_p2 <= std_logic_vector(unsigned(zext_ln16_fu_992_p1) + unsigned(select_ln14_6_fu_974_p3));
    add_ln40_1_fu_822_p2 <= std_logic_vector(unsigned(add_ln40_2_fu_817_p2) + unsigned(mul_ln14_reg_1823));
    add_ln40_2_fu_817_p2 <= std_logic_vector(unsigned(add_ln14_2_reg_1712) + unsigned(zext_ln16_1_fu_798_p1));
    add_ln40_fu_1087_p2 <= std_logic_vector(unsigned(zext_ln16_reg_2008) + unsigned(mul_ln14_2_reg_1894));
    add_ln41_1_fu_672_p2 <= std_logic_vector(signed(sext_ln14_3_fu_600_p1) + signed(img_in_read_reg_1661));
    add_ln41_2_fu_778_p2 <= std_logic_vector(unsigned(zext_ln16_2_fu_774_p1) + unsigned(ap_const_lv33_6));
    add_ln41_3_fu_836_p2 <= std_logic_vector(unsigned(zext_ln41_fu_833_p1) + unsigned(mul_ln14_reg_1823));
    add_ln41_fu_841_p2 <= std_logic_vector(unsigned(add_ln41_3_fu_836_p2) + unsigned(add_ln41_1_reg_1754));
    add_ln42_1_fu_852_p2 <= std_logic_vector(unsigned(add_ln39_3_fu_801_p2) + unsigned(add_ln42_2_reg_1759));
    add_ln42_2_fu_677_p2 <= std_logic_vector(signed(sext_ln14_6_fu_632_p1) + signed(add_ln14_2_fu_636_p2));
    add_ln42_fu_1011_p2 <= std_logic_vector(unsigned(zext_ln16_reg_2008) + unsigned(mul_ln14_3_reg_2033));
    add_ln43_1_fu_884_p2 <= std_logic_vector(unsigned(zext_ln16_1_reg_1860) + unsigned(img_in_read_reg_1661));
    add_ln43_2_fu_1103_p2 <= std_logic_vector(unsigned(zext_ln40_fu_1091_p1) + unsigned(zext_ln43_fu_1097_p1));
    add_ln43_3_fu_1113_p2 <= std_logic_vector(unsigned(zext_ln42_fu_1094_p1) + unsigned(zext_ln43_1_fu_1100_p1));
    add_ln43_fu_888_p2 <= std_logic_vector(unsigned(add_ln43_1_fu_884_p2) + unsigned(mul_ln14_1_reg_1850));
    add_ln52_1_fu_1135_p2 <= std_logic_vector(unsigned(add_ln40_fu_1087_p2) + unsigned(add_ln52_reg_1719));
    add_ln52_fu_641_p2 <= std_logic_vector(unsigned(img_in_read_reg_1661) + unsigned(ap_const_lv64_1));
    add_ln53_1_fu_1146_p2 <= std_logic_vector(unsigned(zext_ln16_reg_2008) + unsigned(mul_ln14_4_reg_1942));
    add_ln53_2_fu_1150_p2 <= std_logic_vector(unsigned(add_ln53_1_fu_1146_p2) + unsigned(add_ln53_reg_1725));
    add_ln53_fu_646_p2 <= std_logic_vector(unsigned(img_in_read_reg_1661) + unsigned(ap_const_lv64_2));
    add_ln54_1_fu_1165_p2 <= std_logic_vector(unsigned(add_ln54_fu_1161_p2) + unsigned(add_ln14_2_reg_1712));
    add_ln54_fu_1161_p2 <= std_logic_vector(unsigned(zext_ln16_reg_2008) + unsigned(select_ln14_10_reg_1947));
    add_ln55_1_fu_1180_p2 <= std_logic_vector(unsigned(add_ln55_fu_1176_p2) + unsigned(add_ln14_2_reg_1712));
    add_ln55_fu_1176_p2 <= std_logic_vector(unsigned(zext_ln16_reg_2008) + unsigned(select_ln14_11_reg_1998));
    add_ln56_1_fu_1195_p2 <= std_logic_vector(unsigned(add_ln56_fu_1191_p2) + unsigned(add_ln53_reg_1725));
    add_ln56_fu_1191_p2 <= std_logic_vector(unsigned(zext_ln16_reg_2008) + unsigned(mul_ln14_5_reg_2003));
    add_ln57_fu_1206_p2 <= std_logic_vector(unsigned(add_ln42_reg_2043) + unsigned(add_ln52_reg_1719));
    add_ln58_1_fu_1216_p2 <= std_logic_vector(unsigned(add_ln42_reg_2043) + unsigned(add_ln58_reg_1731));
    add_ln58_fu_651_p2 <= std_logic_vector(unsigned(img_in_read_reg_1661) + unsigned(ap_const_lv64_FFFFFFFFFFFFFFFF));
    add_ln59_1_fu_1226_p2 <= std_logic_vector(unsigned(add_ln56_fu_1191_p2) + unsigned(add_ln59_reg_1737));
    add_ln59_fu_656_p2 <= std_logic_vector(unsigned(img_in_read_reg_1661) + unsigned(ap_const_lv64_FFFFFFFFFFFFFFFE));
    add_ln60_1_fu_1237_p2 <= std_logic_vector(unsigned(add_ln55_fu_1176_p2) + unsigned(add_ln60_reg_1743));
    add_ln60_fu_661_p2 <= std_logic_vector(unsigned(img_in_read_reg_1661) + unsigned(ap_const_lv64_FFFFFFFFFFFFFFFD));
    add_ln61_fu_1248_p2 <= std_logic_vector(unsigned(add_ln54_fu_1161_p2) + unsigned(add_ln60_reg_1743));
    add_ln62_fu_1259_p2 <= std_logic_vector(unsigned(add_ln53_1_fu_1146_p2) + unsigned(add_ln59_reg_1737));
    add_ln63_fu_1270_p2 <= std_logic_vector(unsigned(add_ln40_fu_1087_p2) + unsigned(add_ln58_reg_1731));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(13);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(14);
    ap_CS_fsm_pp0_stage12 <= ap_CS_fsm(15);
    ap_CS_fsm_pp0_stage13 <= ap_CS_fsm(16);
    ap_CS_fsm_pp0_stage14 <= ap_CS_fsm(17);
    ap_CS_fsm_pp0_stage15 <= ap_CS_fsm(18);
    ap_CS_fsm_pp0_stage16 <= ap_CS_fsm(19);
    ap_CS_fsm_pp0_stage17 <= ap_CS_fsm(20);
    ap_CS_fsm_pp0_stage18 <= ap_CS_fsm(21);
    ap_CS_fsm_pp0_stage19 <= ap_CS_fsm(22);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(9);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(10);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(11);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(12);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state55 <= ap_CS_fsm(23);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln21_reg_2113_pp0_iter1_reg, ap_enable_reg_pp0_iter2, gmem_RVALID, ap_block_state24_io)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_const_boolean_1 = ap_block_state24_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln21_reg_2113_pp0_iter1_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln21_reg_2113_pp0_iter1_reg, ap_enable_reg_pp0_iter2, gmem_RVALID, ap_block_state24_io)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_const_boolean_1 = ap_block_state24_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln21_reg_2113_pp0_iter1_reg = ap_const_lv1_0)));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage10_11001_assign_proc : process(icmp_ln21_reg_2113, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, gmem_RVALID, gmem_BVALID, ap_block_state34_io, ap_predicate_op503_writeresp_state54)
    begin
                ap_block_pp0_stage10_11001 <= (((ap_predicate_op503_writeresp_state54 = ap_const_boolean_1) and (gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state34_io) or ((gmem_RVALID = ap_const_logic_0) and (icmp_ln21_reg_2113 = ap_const_lv1_0)))));
    end process;


    ap_block_pp0_stage10_subdone_assign_proc : process(icmp_ln21_reg_2113, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, gmem_RVALID, gmem_BVALID, ap_block_state34_io, ap_predicate_op503_writeresp_state54)
    begin
                ap_block_pp0_stage10_subdone <= (((ap_predicate_op503_writeresp_state54 = ap_const_boolean_1) and (gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state34_io) or ((gmem_RVALID = ap_const_logic_0) and (icmp_ln21_reg_2113 = ap_const_lv1_0)))));
    end process;

        ap_block_pp0_stage11 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage11_11001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln14_reg_1774, ap_enable_reg_pp0_iter1, gmem_RVALID, ap_block_state35_io)
    begin
                ap_block_pp0_stage11_11001 <= (((ap_const_boolean_1 = ap_block_state35_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((gmem_RVALID = ap_const_logic_0) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage11_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln14_reg_1774, ap_enable_reg_pp0_iter1, gmem_RVALID, ap_block_state35_io)
    begin
                ap_block_pp0_stage11_subdone <= (((ap_const_boolean_1 = ap_block_state35_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((gmem_RVALID = ap_const_logic_0) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage12 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage12_11001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln14_reg_1774, ap_enable_reg_pp0_iter1, gmem_RVALID, ap_block_state36_io)
    begin
                ap_block_pp0_stage12_11001 <= (((ap_const_boolean_1 = ap_block_state36_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((gmem_RVALID = ap_const_logic_0) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage12_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln14_reg_1774, ap_enable_reg_pp0_iter1, gmem_RVALID, ap_block_state36_io)
    begin
                ap_block_pp0_stage12_subdone <= (((ap_const_boolean_1 = ap_block_state36_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((gmem_RVALID = ap_const_logic_0) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage13 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage13_11001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln14_reg_1774, ap_enable_reg_pp0_iter1, gmem_RVALID, ap_block_state37_io)
    begin
                ap_block_pp0_stage13_11001 <= (((ap_const_boolean_1 = ap_block_state37_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((gmem_RVALID = ap_const_logic_0) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage13_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln14_reg_1774, ap_enable_reg_pp0_iter1, gmem_RVALID, ap_block_state37_io)
    begin
                ap_block_pp0_stage13_subdone <= (((ap_const_boolean_1 = ap_block_state37_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((gmem_RVALID = ap_const_logic_0) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage14 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage14_11001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln14_reg_1774, ap_enable_reg_pp0_iter1, gmem_RVALID, ap_block_state38_io)
    begin
                ap_block_pp0_stage14_11001 <= (((gmem_RVALID = ap_const_logic_0) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state38_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage14_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln14_reg_1774, ap_enable_reg_pp0_iter1, gmem_RVALID, ap_block_state38_io)
    begin
                ap_block_pp0_stage14_subdone <= (((gmem_RVALID = ap_const_logic_0) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state38_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage15 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage15_11001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln14_reg_1774, gmem_RVALID)
    begin
                ap_block_pp0_stage15_11001 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage15_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln14_reg_1774, gmem_RVALID)
    begin
                ap_block_pp0_stage15_subdone <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage16 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage16_11001_assign_proc : process(icmp_ln21_reg_2113, ap_enable_reg_pp0_iter1, gmem_RVALID)
    begin
                ap_block_pp0_stage16_11001 <= ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage16_subdone_assign_proc : process(icmp_ln21_reg_2113, ap_enable_reg_pp0_iter1, gmem_RVALID)
    begin
                ap_block_pp0_stage16_subdone <= ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0));
    end process;

        ap_block_pp0_stage17 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage17_11001_assign_proc : process(icmp_ln21_reg_2113, ap_enable_reg_pp0_iter1, gmem_RVALID)
    begin
                ap_block_pp0_stage17_11001 <= ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage17_subdone_assign_proc : process(icmp_ln21_reg_2113, ap_enable_reg_pp0_iter1, gmem_RVALID)
    begin
                ap_block_pp0_stage17_subdone <= ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0));
    end process;

        ap_block_pp0_stage18 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage18_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, icmp_ln21_reg_2113_pp0_iter1_reg, gmem_RVALID, ap_block_state22_io)
    begin
                ap_block_pp0_stage18_11001 <= (((gmem_RVALID = ap_const_logic_0) and (icmp_ln21_reg_2113_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state22_io) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage18_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, icmp_ln21_reg_2113_pp0_iter1_reg, gmem_RVALID, ap_block_state22_io)
    begin
                ap_block_pp0_stage18_subdone <= (((gmem_RVALID = ap_const_logic_0) and (icmp_ln21_reg_2113_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state22_io) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage19 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage19_01001_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln21_reg_2113_pp0_iter1_reg, gmem_RVALID)
    begin
                ap_block_pp0_stage19_01001 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln21_reg_2113_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage19_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, icmp_ln21_reg_2113_pp0_iter1_reg, gmem_RVALID, ap_block_state23_io)
    begin
                ap_block_pp0_stage19_11001 <= (((gmem_RVALID = ap_const_logic_0) and (icmp_ln21_reg_2113_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state23_io) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage19_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, icmp_ln21_reg_2113_pp0_iter1_reg, gmem_RVALID, ap_block_state23_io)
    begin
                ap_block_pp0_stage19_subdone <= (((gmem_RVALID = ap_const_logic_0) and (icmp_ln21_reg_2113_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state23_io) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln21_reg_2113_pp0_iter1_reg, ap_enable_reg_pp0_iter2, gmem_RVALID, ap_block_state25_io)
    begin
                ap_block_pp0_stage1_11001 <= (((ap_const_boolean_1 = ap_block_state25_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln21_reg_2113_pp0_iter1_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln21_reg_2113_pp0_iter1_reg, ap_enable_reg_pp0_iter2, gmem_RVALID, ap_block_state25_io)
    begin
                ap_block_pp0_stage1_subdone <= (((ap_const_boolean_1 = ap_block_state25_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln21_reg_2113_pp0_iter1_reg = ap_const_lv1_0)));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state26_io)
    begin
                ap_block_pp0_stage2_11001 <= ((ap_const_boolean_1 = ap_block_state26_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state26_io)
    begin
                ap_block_pp0_stage2_subdone <= ((ap_const_boolean_1 = ap_block_state26_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state27_io)
    begin
                ap_block_pp0_stage3_11001 <= ((ap_const_boolean_1 = ap_block_state27_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage3_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state27_io)
    begin
                ap_block_pp0_stage3_subdone <= ((ap_const_boolean_1 = ap_block_state27_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage4_01001_assign_proc : process(icmp_ln21_reg_2113, ap_enable_reg_pp0_iter1, gmem_BVALID)
    begin
                ap_block_pp0_stage4_01001 <= ((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_1));
    end process;


    ap_block_pp0_stage4_11001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln21_reg_2113, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, gmem_BVALID, ap_block_state8_io, ap_block_state48_io)
    begin
                ap_block_pp0_stage4_11001 <= (((ap_const_boolean_1 = ap_block_state48_io) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_1)) or ((ap_const_boolean_1 = ap_block_state8_io) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage4_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln21_reg_2113, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, gmem_BVALID, ap_block_state8_io, ap_block_state48_io)
    begin
                ap_block_pp0_stage4_subdone <= (((ap_const_boolean_1 = ap_block_state48_io) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_1)) or ((ap_const_boolean_1 = ap_block_state8_io) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage5_01001_assign_proc : process(icmp_ln21_reg_2113, ap_enable_reg_pp0_iter1, gmem_RVALID)
    begin
                ap_block_pp0_stage5_01001 <= ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage5_11001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln21_reg_2113, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, gmem_RVALID, ap_block_state9_io, ap_block_state49_io)
    begin
                ap_block_pp0_stage5_11001 <= (((ap_const_boolean_1 = ap_block_state49_io) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state9_io) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage5_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln21_reg_2113, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, gmem_RVALID, ap_block_state9_io, ap_block_state49_io)
    begin
                ap_block_pp0_stage5_subdone <= (((ap_const_boolean_1 = ap_block_state49_io) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state9_io) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0)));
    end process;

        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage6_11001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln21_reg_2113, ap_enable_reg_pp0_iter1, gmem_RVALID, ap_block_state10_io)
    begin
                ap_block_pp0_stage6_11001 <= (((ap_const_boolean_1 = ap_block_state10_io) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage6_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln21_reg_2113, ap_enable_reg_pp0_iter1, gmem_RVALID, ap_block_state10_io)
    begin
                ap_block_pp0_stage6_subdone <= (((ap_const_boolean_1 = ap_block_state10_io) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0)));
    end process;

        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage7_11001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln21_reg_2113, ap_enable_reg_pp0_iter1, gmem_RVALID, ap_block_state11_io)
    begin
                ap_block_pp0_stage7_11001 <= (((ap_const_boolean_1 = ap_block_state11_io) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage7_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln21_reg_2113, ap_enable_reg_pp0_iter1, gmem_RVALID, ap_block_state11_io)
    begin
                ap_block_pp0_stage7_subdone <= (((ap_const_boolean_1 = ap_block_state11_io) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0)));
    end process;

        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage8_11001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln21_reg_2113, ap_enable_reg_pp0_iter1, gmem_RVALID, ap_block_state12_io)
    begin
                ap_block_pp0_stage8_11001 <= (((ap_const_boolean_1 = ap_block_state12_io) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage8_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln21_reg_2113, ap_enable_reg_pp0_iter1, gmem_RVALID, ap_block_state12_io)
    begin
                ap_block_pp0_stage8_subdone <= (((ap_const_boolean_1 = ap_block_state12_io) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0)));
    end process;

        ap_block_pp0_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage9_11001_assign_proc : process(icmp_ln21_reg_2113, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, gmem_RVALID, gmem_BVALID, ap_block_state33_io, ap_predicate_op500_writeresp_state53)
    begin
                ap_block_pp0_stage9_11001 <= (((ap_predicate_op500_writeresp_state53 = ap_const_boolean_1) and (gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state33_io) or ((gmem_RVALID = ap_const_logic_0) and (icmp_ln21_reg_2113 = ap_const_lv1_0)))));
    end process;


    ap_block_pp0_stage9_subdone_assign_proc : process(icmp_ln21_reg_2113, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, gmem_RVALID, gmem_BVALID, ap_block_state33_io, ap_predicate_op500_writeresp_state53)
    begin
                ap_block_pp0_stage9_subdone <= (((ap_predicate_op500_writeresp_state53 = ap_const_boolean_1) and (gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state33_io) or ((gmem_RVALID = ap_const_logic_0) and (icmp_ln21_reg_2113 = ap_const_lv1_0)))));
    end process;


    ap_block_state10_io_assign_proc : process(icmp_ln14_reg_1774, gmem_ARREADY)
    begin
                ap_block_state10_io <= ((gmem_ARREADY = ap_const_logic_0) and (icmp_ln14_reg_1774 = ap_const_lv1_0));
    end process;

        ap_block_state10_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state11_io_assign_proc : process(icmp_ln14_reg_1774, gmem_ARREADY)
    begin
                ap_block_state11_io <= ((gmem_ARREADY = ap_const_logic_0) and (icmp_ln14_reg_1774 = ap_const_lv1_0));
    end process;

        ap_block_state11_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state12_io_assign_proc : process(icmp_ln14_reg_1774, gmem_ARREADY)
    begin
                ap_block_state12_io <= ((gmem_ARREADY = ap_const_logic_0) and (icmp_ln14_reg_1774 = ap_const_lv1_0));
    end process;

        ap_block_state12_pp0_stage8_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage9_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage10_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state15_pp0_stage11_iter0_assign_proc : process(icmp_ln14_reg_1774, gmem_RVALID)
    begin
                ap_block_state15_pp0_stage11_iter0 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln14_reg_1774 = ap_const_lv1_0));
    end process;


    ap_block_state16_pp0_stage12_iter0_assign_proc : process(icmp_ln14_reg_1774, gmem_RVALID)
    begin
                ap_block_state16_pp0_stage12_iter0 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln14_reg_1774 = ap_const_lv1_0));
    end process;


    ap_block_state17_pp0_stage13_iter0_assign_proc : process(icmp_ln14_reg_1774, gmem_RVALID)
    begin
                ap_block_state17_pp0_stage13_iter0 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln14_reg_1774 = ap_const_lv1_0));
    end process;


    ap_block_state18_pp0_stage14_iter0_assign_proc : process(icmp_ln14_reg_1774, gmem_RVALID)
    begin
                ap_block_state18_pp0_stage14_iter0 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln14_reg_1774 = ap_const_lv1_0));
    end process;


    ap_block_state19_pp0_stage15_iter0_assign_proc : process(icmp_ln14_reg_1774, gmem_RVALID)
    begin
                ap_block_state19_pp0_stage15_iter0 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln14_reg_1774 = ap_const_lv1_0));
    end process;

        ap_block_state20_pp0_stage16_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage17_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state22_io_assign_proc : process(gmem_AWREADY, gmem_ARREADY, ap_predicate_op304_readreq_state22, ap_predicate_op305_writereq_state22, ap_predicate_op306_writereq_state22)
    begin
                ap_block_state22_io <= (((gmem_ARREADY = ap_const_logic_0) and (ap_predicate_op304_readreq_state22 = ap_const_boolean_1)) or ((gmem_AWREADY = ap_const_logic_0) and (ap_predicate_op306_writereq_state22 = ap_const_boolean_1)) or ((gmem_AWREADY = ap_const_logic_0) and (ap_predicate_op305_writereq_state22 = ap_const_boolean_1)));
    end process;

        ap_block_state22_pp0_stage18_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state23_io_assign_proc : process(gmem_WREADY, gmem_ARREADY, ap_predicate_op308_readreq_state23, ap_predicate_op309_write_state23)
    begin
                ap_block_state23_io <= (((gmem_WREADY = ap_const_logic_0) and (ap_predicate_op309_write_state23 = ap_const_boolean_1)) or ((gmem_ARREADY = ap_const_logic_0) and (ap_predicate_op308_readreq_state23 = ap_const_boolean_1)));
    end process;

        ap_block_state23_pp0_stage19_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state24_io_assign_proc : process(icmp_ln21_reg_2113, gmem_ARREADY)
    begin
                ap_block_state24_io <= ((gmem_ARREADY = ap_const_logic_0) and (icmp_ln21_reg_2113 = ap_const_lv1_0));
    end process;

        ap_block_state24_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state25_io_assign_proc : process(icmp_ln21_reg_2113, gmem_ARREADY)
    begin
                ap_block_state25_io <= ((gmem_ARREADY = ap_const_logic_0) and (icmp_ln21_reg_2113 = ap_const_lv1_0));
    end process;

        ap_block_state25_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state26_io_assign_proc : process(icmp_ln21_reg_2113, gmem_ARREADY)
    begin
                ap_block_state26_io <= ((gmem_ARREADY = ap_const_logic_0) and (icmp_ln21_reg_2113 = ap_const_lv1_0));
    end process;

        ap_block_state26_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state27_io_assign_proc : process(icmp_ln21_reg_2113, gmem_ARREADY)
    begin
                ap_block_state27_io <= ((gmem_ARREADY = ap_const_logic_0) and (icmp_ln21_reg_2113 = ap_const_lv1_0));
    end process;

        ap_block_state27_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state28_pp0_stage4_iter1_assign_proc : process(icmp_ln21_reg_2113, gmem_BVALID)
    begin
                ap_block_state28_pp0_stage4_iter1 <= ((gmem_BVALID = ap_const_logic_0) and (icmp_ln21_reg_2113 = ap_const_lv1_1));
    end process;


    ap_block_state29_pp0_stage5_iter1_assign_proc : process(icmp_ln21_reg_2113, gmem_RVALID)
    begin
                ap_block_state29_pp0_stage5_iter1 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln21_reg_2113 = ap_const_lv1_0));
    end process;


    ap_block_state30_pp0_stage6_iter1_assign_proc : process(icmp_ln21_reg_2113, gmem_RVALID)
    begin
                ap_block_state30_pp0_stage6_iter1 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln21_reg_2113 = ap_const_lv1_0));
    end process;


    ap_block_state31_pp0_stage7_iter1_assign_proc : process(icmp_ln21_reg_2113, gmem_RVALID)
    begin
                ap_block_state31_pp0_stage7_iter1 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln21_reg_2113 = ap_const_lv1_0));
    end process;


    ap_block_state32_pp0_stage8_iter1_assign_proc : process(icmp_ln21_reg_2113, gmem_RVALID)
    begin
                ap_block_state32_pp0_stage8_iter1 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln21_reg_2113 = ap_const_lv1_0));
    end process;


    ap_block_state33_io_assign_proc : process(icmp_ln21_reg_2113, gmem_ARREADY)
    begin
                ap_block_state33_io <= ((gmem_ARREADY = ap_const_logic_0) and (icmp_ln21_reg_2113 = ap_const_lv1_0));
    end process;


    ap_block_state33_pp0_stage9_iter1_assign_proc : process(icmp_ln21_reg_2113, gmem_RVALID)
    begin
                ap_block_state33_pp0_stage9_iter1 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln21_reg_2113 = ap_const_lv1_0));
    end process;


    ap_block_state34_io_assign_proc : process(icmp_ln21_reg_2113, gmem_ARREADY)
    begin
                ap_block_state34_io <= ((gmem_ARREADY = ap_const_logic_0) and (icmp_ln21_reg_2113 = ap_const_lv1_0));
    end process;


    ap_block_state34_pp0_stage10_iter1_assign_proc : process(icmp_ln21_reg_2113, gmem_RVALID)
    begin
                ap_block_state34_pp0_stage10_iter1 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln21_reg_2113 = ap_const_lv1_0));
    end process;


    ap_block_state35_io_assign_proc : process(icmp_ln21_reg_2113, gmem_ARREADY)
    begin
                ap_block_state35_io <= ((gmem_ARREADY = ap_const_logic_0) and (icmp_ln21_reg_2113 = ap_const_lv1_0));
    end process;

        ap_block_state35_pp0_stage11_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state36_io_assign_proc : process(icmp_ln21_reg_2113, gmem_ARREADY)
    begin
                ap_block_state36_io <= ((gmem_ARREADY = ap_const_logic_0) and (icmp_ln21_reg_2113 = ap_const_lv1_0));
    end process;

        ap_block_state36_pp0_stage12_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state37_io_assign_proc : process(icmp_ln21_reg_2113, gmem_ARREADY)
    begin
                ap_block_state37_io <= ((gmem_ARREADY = ap_const_logic_0) and (icmp_ln21_reg_2113 = ap_const_lv1_0));
    end process;

        ap_block_state37_pp0_stage13_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state38_io_assign_proc : process(icmp_ln21_reg_2113, gmem_ARREADY)
    begin
                ap_block_state38_io <= ((gmem_ARREADY = ap_const_logic_0) and (icmp_ln21_reg_2113 = ap_const_lv1_0));
    end process;

        ap_block_state38_pp0_stage14_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage15_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state40_pp0_stage16_iter1_assign_proc : process(icmp_ln21_reg_2113, gmem_RVALID)
    begin
                ap_block_state40_pp0_stage16_iter1 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln21_reg_2113 = ap_const_lv1_0));
    end process;


    ap_block_state41_pp0_stage17_iter1_assign_proc : process(icmp_ln21_reg_2113, gmem_RVALID)
    begin
                ap_block_state41_pp0_stage17_iter1 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln21_reg_2113 = ap_const_lv1_0));
    end process;


    ap_block_state42_pp0_stage18_iter1_assign_proc : process(icmp_ln21_reg_2113_pp0_iter1_reg, gmem_RVALID)
    begin
                ap_block_state42_pp0_stage18_iter1 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln21_reg_2113_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_block_state43_pp0_stage19_iter1_assign_proc : process(icmp_ln21_reg_2113_pp0_iter1_reg, gmem_RVALID)
    begin
                ap_block_state43_pp0_stage19_iter1 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln21_reg_2113_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_block_state44_pp0_stage0_iter2_assign_proc : process(icmp_ln21_reg_2113_pp0_iter1_reg, gmem_RVALID)
    begin
                ap_block_state44_pp0_stage0_iter2 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln21_reg_2113_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_block_state45_pp0_stage1_iter2_assign_proc : process(icmp_ln21_reg_2113_pp0_iter1_reg, gmem_RVALID)
    begin
                ap_block_state45_pp0_stage1_iter2 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln21_reg_2113_pp0_iter1_reg = ap_const_lv1_0));
    end process;

        ap_block_state46_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state48_io_assign_proc : process(gmem_WREADY, ap_predicate_op491_write_state48)
    begin
                ap_block_state48_io <= ((ap_predicate_op491_write_state48 = ap_const_boolean_1) and (gmem_WREADY = ap_const_logic_0));
    end process;

        ap_block_state48_pp0_stage4_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state49_io_assign_proc : process(gmem_WREADY, ap_predicate_op493_write_state49)
    begin
                ap_block_state49_io <= ((ap_predicate_op493_write_state49 = ap_const_boolean_1) and (gmem_WREADY = ap_const_logic_0));
    end process;

        ap_block_state49_pp0_stage5_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp0_stage6_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp0_stage7_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp0_stage8_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state53_pp0_stage9_iter2_assign_proc : process(gmem_BVALID, ap_predicate_op500_writeresp_state53)
    begin
                ap_block_state53_pp0_stage9_iter2 <= ((ap_predicate_op500_writeresp_state53 = ap_const_boolean_1) and (gmem_BVALID = ap_const_logic_0));
    end process;


    ap_block_state54_pp0_stage10_iter2_assign_proc : process(gmem_BVALID, ap_predicate_op503_writeresp_state54)
    begin
                ap_block_state54_pp0_stage10_iter2 <= ((ap_predicate_op503_writeresp_state54 = ap_const_boolean_1) and (gmem_BVALID = ap_const_logic_0));
    end process;

        ap_block_state5_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state8_io_assign_proc : process(icmp_ln14_reg_1774, gmem_ARREADY)
    begin
                ap_block_state8_io <= ((gmem_ARREADY = ap_const_logic_0) and (icmp_ln14_reg_1774 = ap_const_lv1_0));
    end process;

        ap_block_state8_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state9_io_assign_proc : process(icmp_ln14_reg_1774, gmem_ARREADY)
    begin
                ap_block_state9_io <= ((gmem_ARREADY = ap_const_logic_0) and (icmp_ln14_reg_1774 = ap_const_lv1_0));
    end process;

        ap_block_state9_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state11_assign_proc : process(icmp_ln14_reg_1774)
    begin
        if ((icmp_ln14_reg_1774 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state11 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_indvar595_phi_fu_467_p4_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, indvar595_reg_463, icmp_ln14_reg_1774_pp0_iter1_reg, add_ln16_1_reg_2028)
    begin
        if (((icmp_ln14_reg_1774_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            ap_phi_mux_indvar595_phi_fu_467_p4 <= add_ln16_1_reg_2028;
        else 
            ap_phi_mux_indvar595_phi_fu_467_p4 <= indvar595_reg_463;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_421_p4_assign_proc : process(icmp_ln14_reg_1774, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, indvar_flatten_reg_417, add_ln14_5_reg_1952)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_indvar_flatten_phi_fu_421_p4 <= add_ln14_5_reg_1952;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_421_p4 <= indvar_flatten_reg_417;
        end if; 
    end process;


    ap_phi_mux_indvar_phi_fu_433_p4_assign_proc : process(icmp_ln14_reg_1774, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, indvar_reg_429, select_ln14_4_reg_1795)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_indvar_phi_fu_433_p4 <= select_ln14_4_reg_1795;
        else 
            ap_phi_mux_indvar_phi_fu_433_p4 <= indvar_reg_429;
        end if; 
    end process;


    ap_phi_mux_x_phi_fu_456_p4_assign_proc : process(icmp_ln14_reg_1774, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, x_reg_452, add_ln16_reg_2023)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_x_phi_fu_456_p4 <= add_ln16_reg_2023;
        else 
            ap_phi_mux_x_phi_fu_456_p4 <= x_reg_452;
        end if; 
    end process;


    ap_phi_mux_y_phi_fu_444_p4_assign_proc : process(icmp_ln14_reg_1774, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, y_reg_440, select_ln14_8_reg_1936)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_y_phi_fu_444_p4 <= select_ln14_8_reg_1936;
        else 
            ap_phi_mux_y_phi_fu_444_p4 <= y_reg_440;
        end if; 
    end process;


    ap_predicate_op304_readreq_state22_assign_proc : process(icmp_ln14_reg_1774, icmp_ln21_reg_2113)
    begin
                ap_predicate_op304_readreq_state22 <= ((icmp_ln21_reg_2113 = ap_const_lv1_0) and (icmp_ln14_reg_1774 = ap_const_lv1_0));
    end process;


    ap_predicate_op305_writereq_state22_assign_proc : process(icmp_ln14_reg_1774, icmp_ln21_reg_2113)
    begin
                ap_predicate_op305_writereq_state22 <= ((icmp_ln21_reg_2113 = ap_const_lv1_0) and (icmp_ln14_reg_1774 = ap_const_lv1_0));
    end process;


    ap_predicate_op306_writereq_state22_assign_proc : process(icmp_ln14_reg_1774, icmp_ln21_reg_2113)
    begin
                ap_predicate_op306_writereq_state22 <= ((icmp_ln21_reg_2113 = ap_const_lv1_1) and (icmp_ln14_reg_1774 = ap_const_lv1_0));
    end process;


    ap_predicate_op308_readreq_state23_assign_proc : process(icmp_ln14_reg_1774, icmp_ln21_reg_2113)
    begin
                ap_predicate_op308_readreq_state23 <= ((icmp_ln21_reg_2113 = ap_const_lv1_0) and (icmp_ln14_reg_1774 = ap_const_lv1_0));
    end process;


    ap_predicate_op309_write_state23_assign_proc : process(icmp_ln14_reg_1774, icmp_ln21_reg_2113)
    begin
                ap_predicate_op309_write_state23 <= ((icmp_ln21_reg_2113 = ap_const_lv1_1) and (icmp_ln14_reg_1774 = ap_const_lv1_0));
    end process;


    ap_predicate_op491_write_state48_assign_proc : process(icmp_ln21_reg_2113_pp0_iter1_reg, icmp_ln28_reg_2324)
    begin
                ap_predicate_op491_write_state48 <= ((icmp_ln28_reg_2324 = ap_const_lv1_0) and (icmp_ln21_reg_2113_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op493_write_state49_assign_proc : process(icmp_ln21_reg_2113_pp0_iter1_reg, icmp_ln28_reg_2324)
    begin
                ap_predicate_op493_write_state49 <= ((icmp_ln28_reg_2324 = ap_const_lv1_1) and (icmp_ln21_reg_2113_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op500_writeresp_state53_assign_proc : process(icmp_ln21_reg_2113_pp0_iter1_reg, icmp_ln28_reg_2324)
    begin
                ap_predicate_op500_writeresp_state53 <= ((icmp_ln28_reg_2324 = ap_const_lv1_0) and (icmp_ln21_reg_2113_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op503_writeresp_state54_assign_proc : process(icmp_ln21_reg_2113_pp0_iter1_reg, icmp_ln28_reg_2324)
    begin
                ap_predicate_op503_writeresp_state54 <= ((icmp_ln28_reg_2324 = ap_const_lv1_1) and (icmp_ln21_reg_2113_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    count_1_fu_1615_p2 <= std_logic_vector(unsigned(zext_ln27_8_fu_1611_p1) + unsigned(zext_ln27_4_fu_1587_p1));
    count_for_fu_1293_p2 <= "1" when (signed(sext_ln886_4_fu_1289_p1) > signed(threshold_read_reg_1641)) else "0";
    count_pre_2_fu_1123_p2 <= std_logic_vector(unsigned(zext_ln43_3_fu_1119_p1) + unsigned(zext_ln43_2_fu_1109_p1));
    count_pre_fu_1031_p2 <= "1" when (signed(sext_ln886_fu_1027_p1) > signed(threshold_read_reg_1641)) else "0";
    empty_18_fu_784_p2 <= std_logic_vector(unsigned(y_reg_440) + unsigned(ap_const_lv32_FFFFFFFF));

    gmem_ARADDR_assign_proc : process(ap_CS_fsm_pp0_stage18, ap_enable_reg_pp0_iter0, icmp_ln14_reg_1774, icmp_ln21_reg_2113, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, gmem_addr_reg_1865, gmem_addr_1_reg_1871, gmem_addr_2_reg_1877, gmem_addr_3_reg_1883, ap_block_pp0_stage4_11001, gmem_addr_4_reg_1904, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage14_11001, gmem_addr_6_reg_2117, gmem_addr_7_reg_2123, gmem_addr_8_reg_2129, gmem_addr_9_reg_2135, gmem_addr_10_reg_2141, gmem_addr_11_reg_2147, gmem_addr_12_reg_2153, gmem_addr_13_reg_2159, gmem_addr_14_reg_2165, gmem_addr_15_reg_2171, gmem_addr_16_reg_2177, gmem_addr_17_reg_2183, ap_predicate_op304_readreq_state22, ap_block_pp0_stage18_11001, ap_predicate_op308_readreq_state23, ap_block_pp0_stage19_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001))) then 
            gmem_ARADDR <= gmem_addr_17_reg_2183;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001))) then 
            gmem_ARADDR <= gmem_addr_16_reg_2177;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001))) then 
            gmem_ARADDR <= gmem_addr_15_reg_2171;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001))) then 
            gmem_ARADDR <= gmem_addr_14_reg_2165;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001))) then 
            gmem_ARADDR <= gmem_addr_13_reg_2159;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001))) then 
            gmem_ARADDR <= gmem_addr_12_reg_2153;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then 
            gmem_ARADDR <= gmem_addr_11_reg_2147;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then 
            gmem_ARADDR <= gmem_addr_10_reg_2141;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            gmem_ARADDR <= gmem_addr_9_reg_2135;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            gmem_ARADDR <= gmem_addr_8_reg_2129;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_predicate_op308_readreq_state23 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            gmem_ARADDR <= gmem_addr_7_reg_2123;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_predicate_op304_readreq_state22 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            gmem_ARADDR <= gmem_addr_6_reg_2117;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            gmem_ARADDR <= gmem_addr_4_reg_1904;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            gmem_ARADDR <= gmem_addr_3_reg_1883;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            gmem_ARADDR <= gmem_addr_2_reg_1877;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            gmem_ARADDR <= gmem_addr_1_reg_1871;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            gmem_ARADDR <= gmem_addr_reg_1865;
        else 
            gmem_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_ARVALID_assign_proc : process(ap_CS_fsm_pp0_stage18, ap_enable_reg_pp0_iter0, icmp_ln14_reg_1774, icmp_ln21_reg_2113, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage14_11001, ap_predicate_op304_readreq_state22, ap_block_pp0_stage18_11001, ap_predicate_op308_readreq_state23, ap_block_pp0_stage19_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_predicate_op308_readreq_state23 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_predicate_op304_readreq_state22 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            gmem_ARVALID <= ap_const_logic_1;
        else 
            gmem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_AWVALID_assign_proc : process(ap_CS_fsm_pp0_stage18, ap_enable_reg_pp0_iter0, ap_predicate_op305_writereq_state22, ap_predicate_op306_writereq_state22, ap_block_pp0_stage18_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_predicate_op306_writereq_state22 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_predicate_op305_writereq_state22 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            gmem_AWVALID <= ap_const_logic_1;
        else 
            gmem_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_BREADY_assign_proc : process(icmp_ln21_reg_2113, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_enable_reg_pp0_iter2, ap_block_pp0_stage4_11001, ap_predicate_op500_writeresp_state53, ap_block_pp0_stage9_11001, ap_predicate_op503_writeresp_state54, ap_block_pp0_stage10_11001)
    begin
        if ((((ap_predicate_op503_writeresp_state54 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or ((ap_predicate_op500_writeresp_state53 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)))) then 
            gmem_BREADY <= ap_const_logic_1;
        else 
            gmem_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem_RREADY_assign_proc : process(ap_CS_fsm_pp0_stage18, ap_enable_reg_pp0_iter0, icmp_ln14_reg_1774, icmp_ln21_reg_2113, ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage11, icmp_ln21_reg_2113_pp0_iter1_reg, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage17_11001, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage14_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage16_11001, ap_block_pp0_stage18_11001, ap_block_pp0_stage19_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln21_reg_2113_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln21_reg_2113_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((icmp_ln21_reg_2113_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001)) or ((icmp_ln21_reg_2113_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)))) then 
            gmem_RREADY <= ap_const_logic_1;
        else 
            gmem_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem_WDATA_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter2, ap_predicate_op491_write_state48, ap_predicate_op493_write_state49, ap_predicate_op309_write_state23, ap_block_pp0_stage19_01001, ap_block_pp0_stage4_01001, ap_block_pp0_stage5_01001)
    begin
        if (((ap_predicate_op493_write_state49 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_01001))) then 
            gmem_WDATA <= ap_const_lv8_FF;
        elsif ((((ap_predicate_op491_write_state48 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_01001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_predicate_op309_write_state23 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage19_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            gmem_WDATA <= ap_const_lv8_0;
        else 
            gmem_WDATA <= "XXXXXXXX";
        end if; 
    end process;


    gmem_WVALID_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter2, ap_predicate_op491_write_state48, ap_block_pp0_stage4_11001, ap_predicate_op493_write_state49, ap_block_pp0_stage5_11001, ap_predicate_op309_write_state23, ap_block_pp0_stage19_11001)
    begin
        if ((((ap_predicate_op493_write_state49 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_predicate_op491_write_state48 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_predicate_op309_write_state23 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            gmem_WVALID <= ap_const_logic_1;
        else 
            gmem_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_blk_n_AR_assign_proc : process(m_axi_gmem_ARREADY, ap_CS_fsm_pp0_stage18, ap_enable_reg_pp0_iter0, ap_block_pp0_stage18, icmp_ln14_reg_1774, icmp_ln21_reg_2113, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage14)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage13)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage12)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage11)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage9)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage19) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage18) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            gmem_blk_n_AR <= m_axi_gmem_ARREADY;
        else 
            gmem_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_AW_assign_proc : process(m_axi_gmem_AWREADY, ap_CS_fsm_pp0_stage18, ap_enable_reg_pp0_iter0, ap_block_pp0_stage18, icmp_ln14_reg_1774, icmp_ln21_reg_2113)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage18) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (icmp_ln21_reg_2113 = ap_const_lv1_1) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage18) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            gmem_blk_n_AW <= m_axi_gmem_AWREADY;
        else 
            gmem_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_B_assign_proc : process(m_axi_gmem_BVALID, icmp_ln21_reg_2113, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, icmp_ln21_reg_2113_pp0_iter1_reg, ap_enable_reg_pp0_iter2, icmp_ln28_reg_2324)
    begin
        if ((((icmp_ln28_reg_2324 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln21_reg_2113_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9)) or ((icmp_ln28_reg_2324 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln21_reg_2113_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4)))) then 
            gmem_blk_n_B <= m_axi_gmem_BVALID;
        else 
            gmem_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_R_assign_proc : process(m_axi_gmem_RVALID, ap_CS_fsm_pp0_stage18, ap_enable_reg_pp0_iter0, ap_block_pp0_stage18, icmp_ln14_reg_1774, icmp_ln21_reg_2113, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, icmp_ln21_reg_2113_pp0_iter1_reg, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage14) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln21_reg_2113_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln21_reg_2113_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage13) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((icmp_ln21_reg_2113_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19)) or ((icmp_ln21_reg_2113_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage18)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage17)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage16)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage9)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln21_reg_2113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5)))) then 
            gmem_blk_n_R <= m_axi_gmem_RVALID;
        else 
            gmem_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_W_assign_proc : process(m_axi_gmem_WREADY, ap_enable_reg_pp0_iter0, icmp_ln14_reg_1774, icmp_ln21_reg_2113, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, icmp_ln21_reg_2113_pp0_iter1_reg, ap_enable_reg_pp0_iter2, icmp_ln28_reg_2324)
    begin
        if ((((icmp_ln28_reg_2324 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln21_reg_2113_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((icmp_ln28_reg_2324 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln21_reg_2113_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (icmp_ln21_reg_2113 = ap_const_lv1_1) and (icmp_ln14_reg_1774 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage19) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            gmem_blk_n_W <= m_axi_gmem_WREADY;
        else 
            gmem_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_474_p2 <= std_logic_vector(unsigned(add_ln39_reg_2018) + unsigned(img_out_read_reg_1636));
    grp_fu_571_p0 <= grp_fu_571_p00(32 - 1 downto 0);
    grp_fu_571_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln14_reg_1678),64));
    grp_fu_571_p1 <= grp_fu_571_p10(32 - 1 downto 0);
    grp_fu_571_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln14_1_reg_1683),64));

    grp_fu_687_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            grp_fu_687_ce <= ap_const_logic_1;
        else 
            grp_fu_687_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_687_p0 <= grp_fu_687_p00(32 - 1 downto 0);
    grp_fu_687_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_y_phi_fu_444_p4),64));
    grp_fu_687_p1 <= sext_ln14_reg_1698(32 - 1 downto 0);

    grp_fu_741_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            grp_fu_741_ce <= ap_const_logic_1;
        else 
            grp_fu_741_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_741_p0 <= grp_fu_741_p00(32 - 1 downto 0);
    grp_fu_741_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln14_4_reg_1795),64));
    grp_fu_741_p1 <= sext_ln14_reg_1698(32 - 1 downto 0);

    grp_fu_756_ce_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            grp_fu_756_ce <= ap_const_logic_1;
        else 
            grp_fu_756_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_756_p0 <= grp_fu_756_p00(32 - 1 downto 0);
    grp_fu_756_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln14_6_reg_1801),64));
    grp_fu_756_p1 <= sext_ln14_reg_1698(32 - 1 downto 0);

    grp_fu_793_ce_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)))) then 
            grp_fu_793_ce <= ap_const_logic_1;
        else 
            grp_fu_793_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_793_p0 <= grp_fu_793_p00(32 - 1 downto 0);
    grp_fu_793_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln14_7_reg_1835),64));
    grp_fu_793_p1 <= sext_ln14_reg_1698(32 - 1 downto 0);

    grp_fu_866_ce_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)))) then 
            grp_fu_866_ce <= ap_const_logic_1;
        else 
            grp_fu_866_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_866_p0 <= grp_fu_866_p00(32 - 1 downto 0);
    grp_fu_866_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_18_reg_1845),64));
    grp_fu_866_p1 <= sext_ln14_reg_1698(32 - 1 downto 0);

    grp_fu_908_ce_assign_proc : process(ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)))) then 
            grp_fu_908_ce <= ap_const_logic_1;
        else 
            grp_fu_908_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_908_p0 <= grp_fu_908_p00(32 - 1 downto 0);
    grp_fu_908_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln14_9_reg_1899),64));
    grp_fu_908_p1 <= sext_ln14_reg_1698(32 - 1 downto 0);

    grp_fu_922_ce_assign_proc : process(ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)))) then 
            grp_fu_922_ce <= ap_const_logic_1;
        else 
            grp_fu_922_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_922_p0 <= grp_fu_922_p00(32 - 1 downto 0);
    grp_fu_922_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(indvars_iv_next578_reg_1915),64));
    grp_fu_922_p1 <= sext_ln14_reg_1698(32 - 1 downto 0);

    grp_fu_950_ce_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)))) then 
            grp_fu_950_ce <= ap_const_logic_1;
        else 
            grp_fu_950_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_950_p0 <= grp_fu_950_p00(32 - 1 downto 0);
    grp_fu_950_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(indvars_iv_next578_mid1_reg_1926),64));
    grp_fu_950_p1 <= sext_ln14_reg_1698(32 - 1 downto 0);

    grp_fu_969_ce_assign_proc : process(ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)))) then 
            grp_fu_969_ce <= ap_const_logic_1;
        else 
            grp_fu_969_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_969_p0 <= grp_fu_969_p00(33 - 1 downto 0);
    grp_fu_969_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln14_10_reg_1973),64));
    grp_fu_969_p1 <= sext_ln14_reg_1698(32 - 1 downto 0);

    grp_fu_982_ce_assign_proc : process(ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage9_11001, ap_block_pp0_stage10_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)))) then 
            grp_fu_982_ce <= ap_const_logic_1;
        else 
            grp_fu_982_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_982_p0 <= grp_fu_982_p00(33 - 1 downto 0);
    grp_fu_982_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln14_8_reg_1978),64));
    grp_fu_982_p1 <= sext_ln14_reg_1698(32 - 1 downto 0);
    icmp126_fu_545_p2 <= "0" when (tmp_1_fu_535_p4 = ap_const_lv30_0) else "1";
    icmp_fu_515_p2 <= "0" when (tmp_fu_505_p4 = ap_const_lv30_0) else "1";
    icmp_ln14_fu_692_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_421_p4 = bound_reg_1764) else "0";
    icmp_ln16_fu_697_p2 <= "1" when (unsigned(ap_phi_mux_x_phi_fu_456_p4) < unsigned(add_ln14_reg_1673)) else "0";
    icmp_ln21_fu_1129_p2 <= "1" when (unsigned(count_pre_2_fu_1123_p2) < unsigned(ap_const_lv3_3)) else "0";
    icmp_ln28_fu_1621_p2 <= "1" when (unsigned(count_1_fu_1615_p2) > unsigned(ap_const_lv5_B)) else "0";
    icmp_ln886_10_fu_1473_p2 <= "1" when (signed(sext_ln886_11_fu_1469_p1) > signed(threshold_read_reg_1641)) else "0";
    icmp_ln886_11_fu_1506_p2 <= "1" when (signed(sext_ln886_12_fu_1502_p1) > signed(threshold_read_reg_1641)) else "0";
    icmp_ln886_12_fu_1523_p2 <= "1" when (signed(sext_ln886_13_fu_1519_p1) > signed(threshold_read_reg_1641)) else "0";
    icmp_ln886_13_fu_1540_p2 <= "1" when (signed(sext_ln886_14_fu_1536_p1) > signed(threshold_read_reg_1641)) else "0";
    icmp_ln886_14_fu_1566_p2 <= "1" when (signed(sext_ln886_15_fu_1562_p1) > signed(threshold_read_reg_1641)) else "0";
    icmp_ln886_1_fu_1065_p2 <= "1" when (signed(sext_ln886_2_fu_1061_p1) > signed(threshold_read_reg_1641)) else "0";
    icmp_ln886_2_fu_1082_p2 <= "1" when (signed(sext_ln886_3_fu_1078_p1) > signed(threshold_read_reg_1641)) else "0";
    icmp_ln886_4_fu_1310_p2 <= "1" when (signed(sext_ln886_5_fu_1306_p1) > signed(threshold_read_reg_1641)) else "0";
    icmp_ln886_5_fu_1333_p2 <= "1" when (signed(sext_ln886_6_fu_1329_p1) > signed(threshold_read_reg_1641)) else "0";
    icmp_ln886_6_fu_1365_p2 <= "1" when (signed(sext_ln886_7_fu_1361_p1) > signed(threshold_read_reg_1641)) else "0";
    icmp_ln886_7_fu_1388_p2 <= "1" when (signed(sext_ln886_8_fu_1384_p1) > signed(threshold_read_reg_1641)) else "0";
    icmp_ln886_8_fu_1421_p2 <= "1" when (signed(sext_ln886_9_fu_1417_p1) > signed(threshold_read_reg_1641)) else "0";
    icmp_ln886_9_fu_1450_p2 <= "1" when (signed(sext_ln886_10_fu_1446_p1) > signed(threshold_read_reg_1641)) else "0";
    icmp_ln886_fu_1048_p2 <= "1" when (signed(sext_ln886_1_fu_1044_p1) > signed(threshold_read_reg_1641)) else "0";
    indvars_iv_next578_fu_899_p2 <= std_logic_vector(unsigned(y_reg_440) + unsigned(ap_const_lv32_1));
    indvars_iv_next578_mid1_fu_913_p2 <= std_logic_vector(unsigned(y_reg_440) + unsigned(ap_const_lv32_2));
    ret_10_fu_1441_p2 <= std_logic_vector(unsigned(zext_ln1347_10_fu_1438_p1) - unsigned(zext_ln1347_reg_2054_pp0_iter1_reg));
    ret_11_fu_1464_p2 <= std_logic_vector(unsigned(zext_ln1347_11_fu_1461_p1) - unsigned(zext_ln1347_reg_2054_pp0_iter1_reg));
    ret_12_fu_1497_p2 <= std_logic_vector(unsigned(zext_ln1347_12_fu_1494_p1) - unsigned(zext_ln1347_reg_2054_pp0_iter1_reg));
    ret_13_fu_1514_p2 <= std_logic_vector(unsigned(zext_ln1347_13_fu_1511_p1) - unsigned(zext_ln1347_reg_2054_pp0_iter1_reg));
    ret_14_fu_1531_p2 <= std_logic_vector(unsigned(zext_ln1347_14_fu_1528_p1) - unsigned(zext_ln1347_reg_2054_pp0_iter1_reg));
    ret_15_fu_1557_p2 <= std_logic_vector(unsigned(zext_ln1347_15_fu_1554_p1) - unsigned(zext_ln1347_reg_2054_pp0_iter1_reg));
    ret_1_fu_1039_p2 <= std_logic_vector(unsigned(zext_ln1347_1_fu_1036_p1) - unsigned(zext_ln1347_reg_2054));
    ret_2_fu_1056_p2 <= std_logic_vector(unsigned(zext_ln1347_2_fu_1053_p1) - unsigned(zext_ln1347_reg_2054));
    ret_3_fu_1073_p2 <= std_logic_vector(unsigned(zext_ln1347_3_fu_1070_p1) - unsigned(zext_ln1347_reg_2054));
    ret_4_fu_1284_p2 <= std_logic_vector(unsigned(zext_ln1347_4_fu_1281_p1) - unsigned(zext_ln1347_reg_2054));
    ret_5_fu_1301_p2 <= std_logic_vector(unsigned(zext_ln1347_5_fu_1298_p1) - unsigned(zext_ln1347_reg_2054));
    ret_6_fu_1324_p2 <= std_logic_vector(unsigned(zext_ln1347_6_fu_1321_p1) - unsigned(zext_ln1347_reg_2054));
    ret_7_fu_1356_p2 <= std_logic_vector(unsigned(zext_ln1347_7_fu_1353_p1) - unsigned(zext_ln1347_reg_2054));
    ret_8_fu_1379_p2 <= std_logic_vector(unsigned(zext_ln1347_8_fu_1376_p1) - unsigned(zext_ln1347_reg_2054));
    ret_9_fu_1412_p2 <= std_logic_vector(unsigned(zext_ln1347_9_fu_1409_p1) - unsigned(zext_ln1347_reg_2054));
    ret_fu_1021_p2 <= std_logic_vector(unsigned(zext_ln215_fu_1015_p1) - unsigned(zext_ln1347_fu_1018_p1));
    select_ln14_10_fu_933_p3 <= 
        empty_19_reg_1910 when (icmp_ln16_reg_1778(0) = '1') else 
        empty_reg_1806;
    select_ln14_11_fu_987_p3 <= 
        empty_20_reg_1957 when (icmp_ln16_reg_1778(0) = '1') else 
        p_mid195_reg_1983;
    select_ln14_1_fu_557_p3 <= 
        add_ln14_4_fu_551_p2 when (icmp126_fu_545_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln14_2_fu_746_p3 <= 
        ap_phi_mux_indvar595_phi_fu_467_p4 when (icmp_ln16_reg_1778(0) = '1') else 
        ap_const_lv32_0;
    select_ln14_3_fu_702_p3 <= 
        ap_phi_mux_x_phi_fu_456_p4 when (icmp_ln16_fu_697_p2(0) = '1') else 
        ap_const_lv32_3;
    select_ln14_4_fu_716_p3 <= 
        ap_phi_mux_indvar_phi_fu_433_p4 when (icmp_ln16_fu_697_p2(0) = '1') else 
        add_ln14_11_fu_710_p2;
    select_ln14_5_fu_724_p3 <= 
        ap_const_lv32_3 when (icmp_ln16_fu_697_p2(0) = '1') else 
        ap_const_lv32_4;
    select_ln14_6_fu_974_p3 <= 
        empty_reg_1806 when (icmp_ln16_reg_1778(0) = '1') else 
        empty_20_reg_1957;
    select_ln14_7_fu_761_p3 <= 
        ap_const_lv32_FFFFFFFD when (icmp_ln16_reg_1778(0) = '1') else 
        ap_const_lv32_FFFFFFFE;
    select_ln14_8_fu_927_p3 <= 
        y_reg_440 when (icmp_ln16_reg_1778(0) = '1') else 
        indvars_iv_next578_reg_1915;
    select_ln14_9_fu_871_p3 <= 
        ap_const_lv32_FFFFFFFE when (icmp_ln16_reg_1778(0) = '1') else 
        ap_const_lv32_FFFFFFFF;
    select_ln14_fu_527_p3 <= 
        add_ln14_3_fu_521_p2 when (icmp_fu_515_p2(0) = '1') else 
        ap_const_lv32_0;
        sext_ln14_1_fu_580_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(cols_read_reg_1627),35));

        sext_ln14_2_fu_590_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_583_p3),35));

        sext_ln14_3_fu_600_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln14_fu_594_p2),64));

        sext_ln14_4_fu_611_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln14_1_fu_604_p3),36));

        sext_ln14_5_fu_622_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln14_2_fu_615_p3),36));

        sext_ln14_6_fu_632_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln14_1_fu_626_p2),64));

        sext_ln14_fu_577_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(cols_read_reg_1627),64));

        sext_ln886_10_fu_1446_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_10_fu_1441_p2),32));

        sext_ln886_11_fu_1469_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_11_fu_1464_p2),32));

        sext_ln886_12_fu_1502_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_12_fu_1497_p2),32));

        sext_ln886_13_fu_1519_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_13_fu_1514_p2),32));

        sext_ln886_14_fu_1536_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_14_fu_1531_p2),32));

        sext_ln886_15_fu_1562_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_15_fu_1557_p2),32));

        sext_ln886_1_fu_1044_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_1_fu_1039_p2),32));

        sext_ln886_2_fu_1061_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_2_fu_1056_p2),32));

        sext_ln886_3_fu_1078_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_3_fu_1073_p2),32));

        sext_ln886_4_fu_1289_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_4_fu_1284_p2),32));

        sext_ln886_5_fu_1306_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_5_fu_1301_p2),32));

        sext_ln886_6_fu_1329_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_6_fu_1324_p2),32));

        sext_ln886_7_fu_1361_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_7_fu_1356_p2),32));

        sext_ln886_8_fu_1384_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_8_fu_1379_p2),32));

        sext_ln886_9_fu_1417_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_9_fu_1412_p2),32));

        sext_ln886_fu_1027_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_fu_1021_p2),32));

    shl_ln14_1_fu_604_p3 <= (cols_read_reg_1627 & ap_const_lv3_0);
    shl_ln14_2_fu_615_p3 <= (cols_read_reg_1627 & ap_const_lv1_0);
    shl_ln_fu_583_p3 <= (cols_read_reg_1627 & ap_const_lv2_0);
    sub_ln14_1_fu_626_p2 <= std_logic_vector(signed(sext_ln14_4_fu_611_p1) - signed(sext_ln14_5_fu_622_p1));
    sub_ln14_fu_594_p2 <= std_logic_vector(signed(sext_ln14_2_fu_590_p1) - signed(sext_ln14_1_fu_580_p1));
    tmp_1_fu_535_p4 <= add_ln14_fu_493_p2(31 downto 2);
    tmp_fu_505_p4 <= add_ln14_1_fu_499_p2(31 downto 2);
    zext_ln1347_10_fu_1438_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(point_V_10_reg_2259),9));
    zext_ln1347_11_fu_1461_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(point_V_11_reg_2269),9));
    zext_ln1347_12_fu_1494_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(point_V_12_reg_2274),9));
    zext_ln1347_13_fu_1511_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(point_V_13_reg_2289),9));
    zext_ln1347_14_fu_1528_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(point_V_14_reg_2299),9));
    zext_ln1347_15_fu_1554_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(point_V_15_reg_2309),9));
    zext_ln1347_1_fu_1036_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(point_V_reg_2078),9));
    zext_ln1347_2_fu_1053_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(point_V_2_reg_2088),9));
    zext_ln1347_3_fu_1070_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(point_V_3_reg_2098),9));
    zext_ln1347_4_fu_1281_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(point_V_4_reg_2189),9));
    zext_ln1347_5_fu_1298_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(point_V_5_reg_2199),9));
    zext_ln1347_6_fu_1321_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(point_V_6_reg_2209),9));
    zext_ln1347_7_fu_1353_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(point_V_7_reg_2219),9));
    zext_ln1347_8_fu_1376_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(point_V_8_reg_2234),9));
    zext_ln1347_9_fu_1409_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(point_V_9_reg_2239),9));
    zext_ln1347_fu_1018_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(center_V_reg_2038),9));
    zext_ln14_4_fu_944_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln14_8_reg_1936),33));
    zext_ln16_1_fu_798_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln14_2_reg_1817),64));
    zext_ln16_2_fu_774_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln14_2_fu_746_p3),33));
    zext_ln16_fu_992_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln14_3_reg_1789),64));
    zext_ln215_fu_1015_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(point_V_16_reg_2049),9));
    zext_ln27_1_fu_1344_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln27_fu_1338_p2),3));
    zext_ln27_2_fu_1426_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln27_1_reg_2224),4));
    zext_ln27_3_fu_1429_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln27_3_reg_2244),4));
    zext_ln27_4_fu_1587_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln27_4_reg_2254),5));
    zext_ln27_5_fu_1590_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln27_6_reg_2279),3));
    zext_ln27_6_fu_1593_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln27_7_reg_2314),3));
    zext_ln27_7_fu_1596_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln27_8_reg_2319),3));
    zext_ln27_8_fu_1611_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln27_10_fu_1605_p2),5));
    zext_ln27_fu_1571_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln886_14_fu_1566_p2),2));
    zext_ln40_fu_1091_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(count_pre_reg_2073),2));
    zext_ln41_fu_833_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln41_2_reg_1840),64));
    zext_ln42_fu_1094_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln886_reg_2083),2));
    zext_ln43_1_fu_1100_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln886_2_reg_2103),2));
    zext_ln43_2_fu_1109_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln43_2_fu_1103_p2),3));
    zext_ln43_3_fu_1119_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln43_3_fu_1113_p2),3));
    zext_ln43_fu_1097_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln886_1_reg_2093),2));
    zext_ln52_fu_1315_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(count_for_reg_2194),2));
    zext_ln54_fu_1318_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln886_4_reg_2204),2));
    zext_ln55_fu_1370_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln886_5_reg_2214),2));
    zext_ln56_fu_1373_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln886_6_reg_2229),2));
    zext_ln57_fu_1393_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln886_7_fu_1388_p2),2));
    zext_ln58_fu_1455_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln886_8_reg_2249),2));
    zext_ln59_fu_1458_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln886_9_reg_2264),2));
    zext_ln60_fu_1478_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln886_10_fu_1473_p2),2));
    zext_ln61_fu_1545_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln886_11_reg_2284),2));
    zext_ln62_fu_1548_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln886_12_reg_2294),2));
    zext_ln63_fu_1551_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln886_13_reg_2304),2));
end behav;
